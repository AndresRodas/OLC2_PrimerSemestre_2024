
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSCADENA CONSOLE DIVIDIDO ENTERO LOG MAS MENOS PARDER PARIZQ POR PUNTO PUNTOCOMAinstrucciones : instruccion instrucciones\n                    | instruccion instruccion : CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMAexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTERO\n                    | CADENA'
    
_lr_action_items = {'CONSOLE':([0,2,21,],[3,3,-3,]),'$end':([1,2,4,21,],[0,-2,-1,-3,]),'PUNTO':([3,],[5,]),'LOG':([5,],[6,]),'PARIZQ':([6,7,8,10,15,16,17,18,],[7,8,8,8,8,8,8,8,]),'MENOS':([7,8,9,10,11,12,13,15,16,17,18,19,20,22,23,24,25,],[10,10,16,10,-10,-11,16,10,10,10,10,-8,-9,-4,-5,-6,-7,]),'ENTERO':([7,8,10,15,16,17,18,],[11,11,11,11,11,11,11,]),'CADENA':([7,8,10,15,16,17,18,],[12,12,12,12,12,12,12,]),'PARDER':([9,11,12,13,19,20,22,23,24,25,],[14,-10,-11,20,-8,-9,-4,-5,-6,-7,]),'MAS':([9,11,12,13,19,20,22,23,24,25,],[15,-10,-11,15,-8,-9,-4,-5,-6,-7,]),'POR':([9,11,12,13,19,20,22,23,24,25,],[17,-10,-11,17,-8,-9,17,17,-6,-7,]),'DIVIDIDO':([9,11,12,13,19,20,22,23,24,25,],[18,-10,-11,18,-8,-9,18,18,-6,-7,]),'PUNTOCOMA':([14,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,2,],[1,4,]),'instruccion':([0,2,],[2,2,]),'expresion':([7,8,10,15,16,17,18,],[9,13,19,22,23,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_lista','gramatica.py',73),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','gramatica.py',74),
  ('instruccion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA','instruccion',7,'p_instruccion_console','gramatica.py',78),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',83),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',84),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',85),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',86),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',93),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',97),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',101),
  ('expresion -> CADENA','expresion',1,'p_expresion_number','gramatica.py',102),
]
