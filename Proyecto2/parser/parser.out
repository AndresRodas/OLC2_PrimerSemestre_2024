Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECIMAL

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> whileinstruction
Rule 7     instruccion -> declaration
Rule 8     instruccion -> arraydeclaration
Rule 9     instruccion -> assignment
Rule 10    instruccion -> breakstmt
Rule 11    instruccion -> continuestmt
Rule 12    instruccion -> functionstmt
Rule 13    instruccion -> call
Rule 14    instruccion -> returnstmt
Rule 15    instruccion -> interfacecreation
Rule 16    instruccion -> interdeclaration
Rule 17    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 18    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 19    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 20    declaration -> VAR ID DOSPTS type IG expression PYC
Rule 21    arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
Rule 22    interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
Rule 23    interfaceContent -> interfaceContent COMA ID DOSPTS expression
Rule 24    interfaceContent -> ID DOSPTS expression
Rule 25    assignment -> ID IG expression PYC
Rule 26    returnstmt -> RETURN expression PYC
Rule 27    returnstmt -> RETURN PYC
Rule 28    call -> ID PARIZQ expressionList PARDER PYC
Rule 29    call -> ID PARIZQ PARDER PYC
Rule 30    functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 31    funcparams -> PARIZQ paramsList PARDER
Rule 32    funcparams -> PARIZQ PARDER
Rule 33    interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
Rule 34    attributeList -> attributeList ID DOSPTS type PYC
Rule 35    attributeList -> ID DOSPTS type PYC
Rule 36    paramsList -> paramsList COMA ID DOSPTS type
Rule 37    paramsList -> ID DOSPTS type
Rule 38    functype -> DOSPTS type
Rule 39    functype -> <empty>
Rule 40    breakstmt -> BREAK PYC
Rule 41    continuestmt -> CONTINUE PYC
Rule 42    type -> NUMBER
Rule 43    type -> FLOAT
Rule 44    type -> STRING
Rule 45    type -> BOOL
Rule 46    expressionList -> expressionList COMA expression
Rule 47    expressionList -> expression
Rule 48    expression -> expression MAS expression
Rule 49    expression -> expression MENOS expression
Rule 50    expression -> expression POR expression
Rule 51    expression -> expression DIVIDIDO expression
Rule 52    expression -> expression MAYOR expression
Rule 53    expression -> expression MENOR expression
Rule 54    expression -> expression MAYORIG expression
Rule 55    expression -> expression MENORIG expression
Rule 56    expression -> expression IGIG expression
Rule 57    expression -> expression DIF expression
Rule 58    expression -> expression AND expression
Rule 59    expression -> expression OR expression
Rule 60    expression -> NOT expression
Rule 61    expression -> PARIZQ expression PARDER
Rule 62    expression -> expression TERN expression DOSPTS expression
Rule 63    expression -> ENTERO
Rule 64    expression -> CADENA
Rule 65    expression -> listArray
Rule 66    expression -> CORIZQ expressionList CORDER
Rule 67    expression -> ID PARIZQ expressionList PARDER
Rule 68    expression -> ID PARIZQ PARDER
Rule 69    listArray -> listArray CORIZQ expression CORDER
Rule 70    listArray -> listArray PUNTO ID
Rule 71    listArray -> ID

Terminals, with rules where they appear

AND                  : 58
BOOL                 : 45
BREAK                : 40
CADENA               : 64
COMA                 : 23 36 46
CONSOLE              : 17
CONTINUE             : 41
CORDER               : 21 66 69
CORIZQ               : 21 66 69
DECIMAL              : 
DIF                  : 57
DIVIDIDO             : 51
DOSPTS               : 20 21 22 23 24 34 35 36 37 38 62
ENTERO               : 63
FLOAT                : 43
FUNC                 : 30
ID                   : 20 21 22 22 23 24 25 28 29 30 33 34 35 36 37 67 68 70 71
IF                   : 18
IG                   : 20 21 22 25
IGIG                 : 56
INTERFACE            : 33
LLAVEDER             : 18 19 22 30 33
LLAVEIZQ             : 18 19 22 30 33
LOG                  : 17
MAS                  : 48
MAYOR                : 52
MAYORIG              : 54
MENOR                : 53
MENORIG              : 55
MENOS                : 49
NOT                  : 60
NUMBER               : 42
OR                   : 59
PARDER               : 17 18 19 28 29 31 32 61 67 68
PARIZQ               : 17 18 19 28 29 31 32 61 67 68
POR                  : 50
PUNTO                : 17 70
PYC                  : 17 20 21 22 25 26 27 28 29 33 34 35 40 41
RETURN               : 26 27
STRING               : 44
TERN                 : 62
VAR                  : 20 21 22
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 8
assignment           : 9
attributeList        : 33 34
block                : 1 2 18 19 30
breakstmt            : 10
call                 : 13
continuestmt         : 11
declaration          : 7
expression           : 18 19 20 21 23 24 25 26 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 61 62 62 62 69
expressionList       : 17 28 46 66 67
funcparams           : 30
functionstmt         : 12
functype             : 30
ifinstruction        : 5
instruccion          : 2 3
interdeclaration     : 16
interfaceContent     : 22 23
interfacecreation    : 15
listArray            : 65 69 70
paramsList           : 31 36
print                : 4
returnstmt           : 14
s                    : 0
type                 : 20 21 34 35 36 37 38
whileinstruction     : 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    INTERFACE       reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    FUNC            reduce using rule 4 (instruccion -> print .)
    RETURN          reduce using rule 4 (instruccion -> print .)
    INTERFACE       reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    INTERFACE       reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> whileinstruction .)
    IF              reduce using rule 6 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 6 (instruccion -> whileinstruction .)
    VAR             reduce using rule 6 (instruccion -> whileinstruction .)
    ID              reduce using rule 6 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 6 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> whileinstruction .)
    FUNC            reduce using rule 6 (instruccion -> whileinstruction .)
    RETURN          reduce using rule 6 (instruccion -> whileinstruction .)
    INTERFACE       reduce using rule 6 (instruccion -> whileinstruction .)
    $end            reduce using rule 6 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> whileinstruction .)


state 7

    (7) instruccion -> declaration .

    CONSOLE         reduce using rule 7 (instruccion -> declaration .)
    IF              reduce using rule 7 (instruccion -> declaration .)
    WHILE           reduce using rule 7 (instruccion -> declaration .)
    VAR             reduce using rule 7 (instruccion -> declaration .)
    ID              reduce using rule 7 (instruccion -> declaration .)
    BREAK           reduce using rule 7 (instruccion -> declaration .)
    CONTINUE        reduce using rule 7 (instruccion -> declaration .)
    FUNC            reduce using rule 7 (instruccion -> declaration .)
    RETURN          reduce using rule 7 (instruccion -> declaration .)
    INTERFACE       reduce using rule 7 (instruccion -> declaration .)
    $end            reduce using rule 7 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 7 (instruccion -> declaration .)


state 8

    (8) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 8 (instruccion -> arraydeclaration .)
    IF              reduce using rule 8 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 8 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 8 (instruccion -> arraydeclaration .)
    ID              reduce using rule 8 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 8 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 8 (instruccion -> arraydeclaration .)
    FUNC            reduce using rule 8 (instruccion -> arraydeclaration .)
    RETURN          reduce using rule 8 (instruccion -> arraydeclaration .)
    INTERFACE       reduce using rule 8 (instruccion -> arraydeclaration .)
    $end            reduce using rule 8 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 8 (instruccion -> arraydeclaration .)


state 9

    (9) instruccion -> assignment .

    CONSOLE         reduce using rule 9 (instruccion -> assignment .)
    IF              reduce using rule 9 (instruccion -> assignment .)
    WHILE           reduce using rule 9 (instruccion -> assignment .)
    VAR             reduce using rule 9 (instruccion -> assignment .)
    ID              reduce using rule 9 (instruccion -> assignment .)
    BREAK           reduce using rule 9 (instruccion -> assignment .)
    CONTINUE        reduce using rule 9 (instruccion -> assignment .)
    FUNC            reduce using rule 9 (instruccion -> assignment .)
    RETURN          reduce using rule 9 (instruccion -> assignment .)
    INTERFACE       reduce using rule 9 (instruccion -> assignment .)
    $end            reduce using rule 9 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 9 (instruccion -> assignment .)


state 10

    (10) instruccion -> breakstmt .

    CONSOLE         reduce using rule 10 (instruccion -> breakstmt .)
    IF              reduce using rule 10 (instruccion -> breakstmt .)
    WHILE           reduce using rule 10 (instruccion -> breakstmt .)
    VAR             reduce using rule 10 (instruccion -> breakstmt .)
    ID              reduce using rule 10 (instruccion -> breakstmt .)
    BREAK           reduce using rule 10 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 10 (instruccion -> breakstmt .)
    FUNC            reduce using rule 10 (instruccion -> breakstmt .)
    RETURN          reduce using rule 10 (instruccion -> breakstmt .)
    INTERFACE       reduce using rule 10 (instruccion -> breakstmt .)
    $end            reduce using rule 10 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 10 (instruccion -> breakstmt .)


state 11

    (11) instruccion -> continuestmt .

    CONSOLE         reduce using rule 11 (instruccion -> continuestmt .)
    IF              reduce using rule 11 (instruccion -> continuestmt .)
    WHILE           reduce using rule 11 (instruccion -> continuestmt .)
    VAR             reduce using rule 11 (instruccion -> continuestmt .)
    ID              reduce using rule 11 (instruccion -> continuestmt .)
    BREAK           reduce using rule 11 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 11 (instruccion -> continuestmt .)
    FUNC            reduce using rule 11 (instruccion -> continuestmt .)
    RETURN          reduce using rule 11 (instruccion -> continuestmt .)
    INTERFACE       reduce using rule 11 (instruccion -> continuestmt .)
    $end            reduce using rule 11 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 11 (instruccion -> continuestmt .)


state 12

    (12) instruccion -> functionstmt .

    CONSOLE         reduce using rule 12 (instruccion -> functionstmt .)
    IF              reduce using rule 12 (instruccion -> functionstmt .)
    WHILE           reduce using rule 12 (instruccion -> functionstmt .)
    VAR             reduce using rule 12 (instruccion -> functionstmt .)
    ID              reduce using rule 12 (instruccion -> functionstmt .)
    BREAK           reduce using rule 12 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 12 (instruccion -> functionstmt .)
    FUNC            reduce using rule 12 (instruccion -> functionstmt .)
    RETURN          reduce using rule 12 (instruccion -> functionstmt .)
    INTERFACE       reduce using rule 12 (instruccion -> functionstmt .)
    $end            reduce using rule 12 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 12 (instruccion -> functionstmt .)


state 13

    (13) instruccion -> call .

    CONSOLE         reduce using rule 13 (instruccion -> call .)
    IF              reduce using rule 13 (instruccion -> call .)
    WHILE           reduce using rule 13 (instruccion -> call .)
    VAR             reduce using rule 13 (instruccion -> call .)
    ID              reduce using rule 13 (instruccion -> call .)
    BREAK           reduce using rule 13 (instruccion -> call .)
    CONTINUE        reduce using rule 13 (instruccion -> call .)
    FUNC            reduce using rule 13 (instruccion -> call .)
    RETURN          reduce using rule 13 (instruccion -> call .)
    INTERFACE       reduce using rule 13 (instruccion -> call .)
    $end            reduce using rule 13 (instruccion -> call .)
    LLAVEDER        reduce using rule 13 (instruccion -> call .)


state 14

    (14) instruccion -> returnstmt .

    CONSOLE         reduce using rule 14 (instruccion -> returnstmt .)
    IF              reduce using rule 14 (instruccion -> returnstmt .)
    WHILE           reduce using rule 14 (instruccion -> returnstmt .)
    VAR             reduce using rule 14 (instruccion -> returnstmt .)
    ID              reduce using rule 14 (instruccion -> returnstmt .)
    BREAK           reduce using rule 14 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 14 (instruccion -> returnstmt .)
    FUNC            reduce using rule 14 (instruccion -> returnstmt .)
    RETURN          reduce using rule 14 (instruccion -> returnstmt .)
    INTERFACE       reduce using rule 14 (instruccion -> returnstmt .)
    $end            reduce using rule 14 (instruccion -> returnstmt .)
    LLAVEDER        reduce using rule 14 (instruccion -> returnstmt .)


state 15

    (15) instruccion -> interfacecreation .

    CONSOLE         reduce using rule 15 (instruccion -> interfacecreation .)
    IF              reduce using rule 15 (instruccion -> interfacecreation .)
    WHILE           reduce using rule 15 (instruccion -> interfacecreation .)
    VAR             reduce using rule 15 (instruccion -> interfacecreation .)
    ID              reduce using rule 15 (instruccion -> interfacecreation .)
    BREAK           reduce using rule 15 (instruccion -> interfacecreation .)
    CONTINUE        reduce using rule 15 (instruccion -> interfacecreation .)
    FUNC            reduce using rule 15 (instruccion -> interfacecreation .)
    RETURN          reduce using rule 15 (instruccion -> interfacecreation .)
    INTERFACE       reduce using rule 15 (instruccion -> interfacecreation .)
    $end            reduce using rule 15 (instruccion -> interfacecreation .)
    LLAVEDER        reduce using rule 15 (instruccion -> interfacecreation .)


state 16

    (16) instruccion -> interdeclaration .

    CONSOLE         reduce using rule 16 (instruccion -> interdeclaration .)
    IF              reduce using rule 16 (instruccion -> interdeclaration .)
    WHILE           reduce using rule 16 (instruccion -> interdeclaration .)
    VAR             reduce using rule 16 (instruccion -> interdeclaration .)
    ID              reduce using rule 16 (instruccion -> interdeclaration .)
    BREAK           reduce using rule 16 (instruccion -> interdeclaration .)
    CONTINUE        reduce using rule 16 (instruccion -> interdeclaration .)
    FUNC            reduce using rule 16 (instruccion -> interdeclaration .)
    RETURN          reduce using rule 16 (instruccion -> interdeclaration .)
    INTERFACE       reduce using rule 16 (instruccion -> interdeclaration .)
    $end            reduce using rule 16 (instruccion -> interdeclaration .)
    LLAVEDER        reduce using rule 16 (instruccion -> interdeclaration .)


state 17

    (17) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 28


state 18

    (18) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 29


state 19

    (19) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 30


state 20

    (20) declaration -> VAR . ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IG expression PYC
    (22) interdeclaration -> VAR . ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    ID              shift and go to state 31


state 21

    (25) assignment -> ID . IG expression PYC
    (28) call -> ID . PARIZQ expressionList PARDER PYC
    (29) call -> ID . PARIZQ PARDER PYC

    IG              shift and go to state 32
    PARIZQ          shift and go to state 33


state 22

    (40) breakstmt -> BREAK . PYC

    PYC             shift and go to state 34


state 23

    (41) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 35


state 24

    (30) functionstmt -> FUNC . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 36


state 25

    (26) returnstmt -> RETURN . expression PYC
    (27) returnstmt -> RETURN . PYC
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    PYC             shift and go to state 38
    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 37
    listArray                      shift and go to state 43

state 26

    (33) interfacecreation -> INTERFACE . ID LLAVEIZQ attributeList LLAVEDER PYC

    ID              shift and go to state 46


state 27

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    INTERFACE       reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)


state 28

    (17) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 47


state 29

    (18) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 48
    listArray                      shift and go to state 43

state 30

    (19) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 49
    listArray                      shift and go to state 43

state 31

    (20) declaration -> VAR ID . DOSPTS type IG expression PYC
    (21) arraydeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IG expression PYC
    (22) interdeclaration -> VAR ID . DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    DOSPTS          shift and go to state 50


state 32

    (25) assignment -> ID IG . expression PYC
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 51
    listArray                      shift and go to state 43

state 33

    (28) call -> ID PARIZQ . expressionList PARDER PYC
    (29) call -> ID PARIZQ . PARDER PYC
    (46) expressionList -> . expressionList COMA expression
    (47) expressionList -> . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    PARDER          shift and go to state 53
    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expressionList                 shift and go to state 52
    expression                     shift and go to state 54
    listArray                      shift and go to state 43

state 34

    (40) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 40 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 40 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 40 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 40 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 40 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 40 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 40 (breakstmt -> BREAK PYC .)
    FUNC            reduce using rule 40 (breakstmt -> BREAK PYC .)
    RETURN          reduce using rule 40 (breakstmt -> BREAK PYC .)
    INTERFACE       reduce using rule 40 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 40 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 40 (breakstmt -> BREAK PYC .)


state 35

    (41) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    FUNC            reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    RETURN          reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    INTERFACE       reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 41 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 41 (continuestmt -> CONTINUE PYC .)


state 36

    (30) functionstmt -> FUNC ID . funcparams functype LLAVEIZQ block LLAVEDER
    (31) funcparams -> . PARIZQ paramsList PARDER
    (32) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 56

    funcparams                     shift and go to state 55

state 37

    (26) returnstmt -> RETURN expression . PYC
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 57
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 38

    (27) returnstmt -> RETURN PYC .

    CONSOLE         reduce using rule 27 (returnstmt -> RETURN PYC .)
    IF              reduce using rule 27 (returnstmt -> RETURN PYC .)
    WHILE           reduce using rule 27 (returnstmt -> RETURN PYC .)
    VAR             reduce using rule 27 (returnstmt -> RETURN PYC .)
    ID              reduce using rule 27 (returnstmt -> RETURN PYC .)
    BREAK           reduce using rule 27 (returnstmt -> RETURN PYC .)
    CONTINUE        reduce using rule 27 (returnstmt -> RETURN PYC .)
    FUNC            reduce using rule 27 (returnstmt -> RETURN PYC .)
    RETURN          reduce using rule 27 (returnstmt -> RETURN PYC .)
    INTERFACE       reduce using rule 27 (returnstmt -> RETURN PYC .)
    $end            reduce using rule 27 (returnstmt -> RETURN PYC .)
    LLAVEDER        reduce using rule 27 (returnstmt -> RETURN PYC .)


state 39

    (60) expression -> NOT . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 71
    listArray                      shift and go to state 43

state 40

    (61) expression -> PARIZQ . expression PARDER
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 72
    listArray                      shift and go to state 43

state 41

    (63) expression -> ENTERO .

    PYC             reduce using rule 63 (expression -> ENTERO .)
    MAS             reduce using rule 63 (expression -> ENTERO .)
    MENOS           reduce using rule 63 (expression -> ENTERO .)
    POR             reduce using rule 63 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 63 (expression -> ENTERO .)
    MAYOR           reduce using rule 63 (expression -> ENTERO .)
    MENOR           reduce using rule 63 (expression -> ENTERO .)
    MAYORIG         reduce using rule 63 (expression -> ENTERO .)
    MENORIG         reduce using rule 63 (expression -> ENTERO .)
    IGIG            reduce using rule 63 (expression -> ENTERO .)
    DIF             reduce using rule 63 (expression -> ENTERO .)
    AND             reduce using rule 63 (expression -> ENTERO .)
    OR              reduce using rule 63 (expression -> ENTERO .)
    TERN            reduce using rule 63 (expression -> ENTERO .)
    PARDER          reduce using rule 63 (expression -> ENTERO .)
    COMA            reduce using rule 63 (expression -> ENTERO .)
    CORDER          reduce using rule 63 (expression -> ENTERO .)
    DOSPTS          reduce using rule 63 (expression -> ENTERO .)
    LLAVEDER        reduce using rule 63 (expression -> ENTERO .)


state 42

    (64) expression -> CADENA .

    PYC             reduce using rule 64 (expression -> CADENA .)
    MAS             reduce using rule 64 (expression -> CADENA .)
    MENOS           reduce using rule 64 (expression -> CADENA .)
    POR             reduce using rule 64 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 64 (expression -> CADENA .)
    MAYOR           reduce using rule 64 (expression -> CADENA .)
    MENOR           reduce using rule 64 (expression -> CADENA .)
    MAYORIG         reduce using rule 64 (expression -> CADENA .)
    MENORIG         reduce using rule 64 (expression -> CADENA .)
    IGIG            reduce using rule 64 (expression -> CADENA .)
    DIF             reduce using rule 64 (expression -> CADENA .)
    AND             reduce using rule 64 (expression -> CADENA .)
    OR              reduce using rule 64 (expression -> CADENA .)
    TERN            reduce using rule 64 (expression -> CADENA .)
    PARDER          reduce using rule 64 (expression -> CADENA .)
    COMA            reduce using rule 64 (expression -> CADENA .)
    CORDER          reduce using rule 64 (expression -> CADENA .)
    DOSPTS          reduce using rule 64 (expression -> CADENA .)
    LLAVEDER        reduce using rule 64 (expression -> CADENA .)


state 43

    (65) expression -> listArray .
    (69) listArray -> listArray . CORIZQ expression CORDER
    (70) listArray -> listArray . PUNTO ID

    PYC             reduce using rule 65 (expression -> listArray .)
    MAS             reduce using rule 65 (expression -> listArray .)
    MENOS           reduce using rule 65 (expression -> listArray .)
    POR             reduce using rule 65 (expression -> listArray .)
    DIVIDIDO        reduce using rule 65 (expression -> listArray .)
    MAYOR           reduce using rule 65 (expression -> listArray .)
    MENOR           reduce using rule 65 (expression -> listArray .)
    MAYORIG         reduce using rule 65 (expression -> listArray .)
    MENORIG         reduce using rule 65 (expression -> listArray .)
    IGIG            reduce using rule 65 (expression -> listArray .)
    DIF             reduce using rule 65 (expression -> listArray .)
    AND             reduce using rule 65 (expression -> listArray .)
    OR              reduce using rule 65 (expression -> listArray .)
    TERN            reduce using rule 65 (expression -> listArray .)
    PARDER          reduce using rule 65 (expression -> listArray .)
    COMA            reduce using rule 65 (expression -> listArray .)
    CORDER          reduce using rule 65 (expression -> listArray .)
    DOSPTS          reduce using rule 65 (expression -> listArray .)
    LLAVEDER        reduce using rule 65 (expression -> listArray .)
    CORIZQ          shift and go to state 73
    PUNTO           shift and go to state 74


state 44

    (66) expression -> CORIZQ . expressionList CORDER
    (46) expressionList -> . expressionList COMA expression
    (47) expressionList -> . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expressionList                 shift and go to state 75
    expression                     shift and go to state 54
    listArray                      shift and go to state 43

state 45

    (67) expression -> ID . PARIZQ expressionList PARDER
    (68) expression -> ID . PARIZQ PARDER
    (71) listArray -> ID .

    PARIZQ          shift and go to state 76
    CORIZQ          reduce using rule 71 (listArray -> ID .)
    PUNTO           reduce using rule 71 (listArray -> ID .)
    PYC             reduce using rule 71 (listArray -> ID .)
    MAS             reduce using rule 71 (listArray -> ID .)
    MENOS           reduce using rule 71 (listArray -> ID .)
    POR             reduce using rule 71 (listArray -> ID .)
    DIVIDIDO        reduce using rule 71 (listArray -> ID .)
    MAYOR           reduce using rule 71 (listArray -> ID .)
    MENOR           reduce using rule 71 (listArray -> ID .)
    MAYORIG         reduce using rule 71 (listArray -> ID .)
    MENORIG         reduce using rule 71 (listArray -> ID .)
    IGIG            reduce using rule 71 (listArray -> ID .)
    DIF             reduce using rule 71 (listArray -> ID .)
    AND             reduce using rule 71 (listArray -> ID .)
    OR              reduce using rule 71 (listArray -> ID .)
    TERN            reduce using rule 71 (listArray -> ID .)
    PARDER          reduce using rule 71 (listArray -> ID .)
    COMA            reduce using rule 71 (listArray -> ID .)
    CORDER          reduce using rule 71 (listArray -> ID .)
    DOSPTS          reduce using rule 71 (listArray -> ID .)
    LLAVEDER        reduce using rule 71 (listArray -> ID .)


state 46

    (33) interfacecreation -> INTERFACE ID . LLAVEIZQ attributeList LLAVEDER PYC

    LLAVEIZQ        shift and go to state 77


state 47

    (17) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 78


state 48

    (18) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 79
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 49

    (19) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 80
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 50

    (20) declaration -> VAR ID DOSPTS . type IG expression PYC
    (21) arraydeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IG expression PYC
    (22) interdeclaration -> VAR ID DOSPTS . ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    ID              shift and go to state 81
    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 82

state 51

    (25) assignment -> ID IG expression . PYC
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 87
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 52

    (28) call -> ID PARIZQ expressionList . PARDER PYC
    (46) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 88
    COMA            shift and go to state 89


state 53

    (29) call -> ID PARIZQ PARDER . PYC

    PYC             shift and go to state 90


state 54

    (47) expressionList -> expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 47 (expressionList -> expression .)
    COMA            reduce using rule 47 (expressionList -> expression .)
    CORDER          reduce using rule 47 (expressionList -> expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 55

    (30) functionstmt -> FUNC ID funcparams . functype LLAVEIZQ block LLAVEDER
    (38) functype -> . DOSPTS type
    (39) functype -> .

    DOSPTS          shift and go to state 92
    LLAVEIZQ        reduce using rule 39 (functype -> .)

    functype                       shift and go to state 91

state 56

    (31) funcparams -> PARIZQ . paramsList PARDER
    (32) funcparams -> PARIZQ . PARDER
    (36) paramsList -> . paramsList COMA ID DOSPTS type
    (37) paramsList -> . ID DOSPTS type

    PARDER          shift and go to state 94
    ID              shift and go to state 95

    paramsList                     shift and go to state 93

state 57

    (26) returnstmt -> RETURN expression PYC .

    CONSOLE         reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    IF              reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    WHILE           reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    VAR             reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    ID              reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    BREAK           reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    CONTINUE        reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    FUNC            reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    RETURN          reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    INTERFACE       reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    $end            reduce using rule 26 (returnstmt -> RETURN expression PYC .)
    LLAVEDER        reduce using rule 26 (returnstmt -> RETURN expression PYC .)


state 58

    (48) expression -> expression MAS . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 96
    listArray                      shift and go to state 43

state 59

    (49) expression -> expression MENOS . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 97
    listArray                      shift and go to state 43

state 60

    (50) expression -> expression POR . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 98
    listArray                      shift and go to state 43

state 61

    (51) expression -> expression DIVIDIDO . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 99
    listArray                      shift and go to state 43

state 62

    (52) expression -> expression MAYOR . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 100
    listArray                      shift and go to state 43

state 63

    (53) expression -> expression MENOR . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 101
    listArray                      shift and go to state 43

state 64

    (54) expression -> expression MAYORIG . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 102
    listArray                      shift and go to state 43

state 65

    (55) expression -> expression MENORIG . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 103
    listArray                      shift and go to state 43

state 66

    (56) expression -> expression IGIG . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 104
    listArray                      shift and go to state 43

state 67

    (57) expression -> expression DIF . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 105
    listArray                      shift and go to state 43

state 68

    (58) expression -> expression AND . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 106
    listArray                      shift and go to state 43

state 69

    (59) expression -> expression OR . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 107
    listArray                      shift and go to state 43

state 70

    (62) expression -> expression TERN . expression DOSPTS expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 108
    listArray                      shift and go to state 43

state 71

    (60) expression -> NOT expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 60 (expression -> NOT expression .)
    PARDER          reduce using rule 60 (expression -> NOT expression .)
    COMA            reduce using rule 60 (expression -> NOT expression .)
    CORDER          reduce using rule 60 (expression -> NOT expression .)
    DOSPTS          reduce using rule 60 (expression -> NOT expression .)
    LLAVEDER        reduce using rule 60 (expression -> NOT expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70

  ! MAS             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MENOS           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! POR             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! DIVIDIDO        [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MAYORIG         [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MENORIG         [ reduce using rule 60 (expression -> NOT expression .) ]
  ! IGIG            [ reduce using rule 60 (expression -> NOT expression .) ]
  ! DIF             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! TERN            [ reduce using rule 60 (expression -> NOT expression .) ]


state 72

    (61) expression -> PARIZQ expression . PARDER
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 109
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 73

    (69) listArray -> listArray CORIZQ . expression CORDER
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    listArray                      shift and go to state 43
    expression                     shift and go to state 110

state 74

    (70) listArray -> listArray PUNTO . ID

    ID              shift and go to state 111


state 75

    (66) expression -> CORIZQ expressionList . CORDER
    (46) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 112
    COMA            shift and go to state 89


state 76

    (67) expression -> ID PARIZQ . expressionList PARDER
    (68) expression -> ID PARIZQ . PARDER
    (46) expressionList -> . expressionList COMA expression
    (47) expressionList -> . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    PARDER          shift and go to state 114
    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expressionList                 shift and go to state 113
    expression                     shift and go to state 54
    listArray                      shift and go to state 43

state 77

    (33) interfacecreation -> INTERFACE ID LLAVEIZQ . attributeList LLAVEDER PYC
    (34) attributeList -> . attributeList ID DOSPTS type PYC
    (35) attributeList -> . ID DOSPTS type PYC

    ID              shift and go to state 115

    attributeList                  shift and go to state 116

state 78

    (17) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (46) expressionList -> . expressionList COMA expression
    (47) expressionList -> . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expressionList                 shift and go to state 117
    expression                     shift and go to state 54
    listArray                      shift and go to state 43

state 79

    (18) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 118


state 80

    (19) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 119


state 81

    (22) interdeclaration -> VAR ID DOSPTS ID . IG LLAVEIZQ interfaceContent LLAVEDER PYC

    IG              shift and go to state 120


state 82

    (20) declaration -> VAR ID DOSPTS type . IG expression PYC
    (21) arraydeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IG expression PYC

    IG              shift and go to state 121
    CORIZQ          shift and go to state 122


state 83

    (42) type -> NUMBER .

    IG              reduce using rule 42 (type -> NUMBER .)
    CORIZQ          reduce using rule 42 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 42 (type -> NUMBER .)
    PARDER          reduce using rule 42 (type -> NUMBER .)
    COMA            reduce using rule 42 (type -> NUMBER .)
    PYC             reduce using rule 42 (type -> NUMBER .)


state 84

    (43) type -> FLOAT .

    IG              reduce using rule 43 (type -> FLOAT .)
    CORIZQ          reduce using rule 43 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 43 (type -> FLOAT .)
    PARDER          reduce using rule 43 (type -> FLOAT .)
    COMA            reduce using rule 43 (type -> FLOAT .)
    PYC             reduce using rule 43 (type -> FLOAT .)


state 85

    (44) type -> STRING .

    IG              reduce using rule 44 (type -> STRING .)
    CORIZQ          reduce using rule 44 (type -> STRING .)
    LLAVEIZQ        reduce using rule 44 (type -> STRING .)
    PARDER          reduce using rule 44 (type -> STRING .)
    COMA            reduce using rule 44 (type -> STRING .)
    PYC             reduce using rule 44 (type -> STRING .)


state 86

    (45) type -> BOOL .

    IG              reduce using rule 45 (type -> BOOL .)
    CORIZQ          reduce using rule 45 (type -> BOOL .)
    LLAVEIZQ        reduce using rule 45 (type -> BOOL .)
    PARDER          reduce using rule 45 (type -> BOOL .)
    COMA            reduce using rule 45 (type -> BOOL .)
    PYC             reduce using rule 45 (type -> BOOL .)


state 87

    (25) assignment -> ID IG expression PYC .

    CONSOLE         reduce using rule 25 (assignment -> ID IG expression PYC .)
    IF              reduce using rule 25 (assignment -> ID IG expression PYC .)
    WHILE           reduce using rule 25 (assignment -> ID IG expression PYC .)
    VAR             reduce using rule 25 (assignment -> ID IG expression PYC .)
    ID              reduce using rule 25 (assignment -> ID IG expression PYC .)
    BREAK           reduce using rule 25 (assignment -> ID IG expression PYC .)
    CONTINUE        reduce using rule 25 (assignment -> ID IG expression PYC .)
    FUNC            reduce using rule 25 (assignment -> ID IG expression PYC .)
    RETURN          reduce using rule 25 (assignment -> ID IG expression PYC .)
    INTERFACE       reduce using rule 25 (assignment -> ID IG expression PYC .)
    $end            reduce using rule 25 (assignment -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 25 (assignment -> ID IG expression PYC .)


state 88

    (28) call -> ID PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 123


state 89

    (46) expressionList -> expressionList COMA . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 124
    listArray                      shift and go to state 43

state 90

    (29) call -> ID PARIZQ PARDER PYC .

    CONSOLE         reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    IF              reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    WHILE           reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    VAR             reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    ID              reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    BREAK           reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    CONTINUE        reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    FUNC            reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    RETURN          reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    INTERFACE       reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    $end            reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 29 (call -> ID PARIZQ PARDER PYC .)


state 91

    (30) functionstmt -> FUNC ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 125


state 92

    (38) functype -> DOSPTS . type
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 126

state 93

    (31) funcparams -> PARIZQ paramsList . PARDER
    (36) paramsList -> paramsList . COMA ID DOSPTS type

    PARDER          shift and go to state 127
    COMA            shift and go to state 128


state 94

    (32) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 32 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 32 (funcparams -> PARIZQ PARDER .)


state 95

    (37) paramsList -> ID . DOSPTS type

    DOSPTS          shift and go to state 129


state 96

    (48) expression -> expression MAS expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 48 (expression -> expression MAS expression .)
    MAS             reduce using rule 48 (expression -> expression MAS expression .)
    MENOS           reduce using rule 48 (expression -> expression MAS expression .)
    MAYOR           reduce using rule 48 (expression -> expression MAS expression .)
    MENOR           reduce using rule 48 (expression -> expression MAS expression .)
    MAYORIG         reduce using rule 48 (expression -> expression MAS expression .)
    MENORIG         reduce using rule 48 (expression -> expression MAS expression .)
    IGIG            reduce using rule 48 (expression -> expression MAS expression .)
    DIF             reduce using rule 48 (expression -> expression MAS expression .)
    AND             reduce using rule 48 (expression -> expression MAS expression .)
    OR              reduce using rule 48 (expression -> expression MAS expression .)
    TERN            reduce using rule 48 (expression -> expression MAS expression .)
    PARDER          reduce using rule 48 (expression -> expression MAS expression .)
    COMA            reduce using rule 48 (expression -> expression MAS expression .)
    CORDER          reduce using rule 48 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 48 (expression -> expression MAS expression .)
    LLAVEDER        reduce using rule 48 (expression -> expression MAS expression .)
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61

  ! POR             [ reduce using rule 48 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 97

    (49) expression -> expression MENOS expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 49 (expression -> expression MENOS expression .)
    MAS             reduce using rule 49 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 49 (expression -> expression MENOS expression .)
    MAYOR           reduce using rule 49 (expression -> expression MENOS expression .)
    MENOR           reduce using rule 49 (expression -> expression MENOS expression .)
    MAYORIG         reduce using rule 49 (expression -> expression MENOS expression .)
    MENORIG         reduce using rule 49 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 49 (expression -> expression MENOS expression .)
    DIF             reduce using rule 49 (expression -> expression MENOS expression .)
    AND             reduce using rule 49 (expression -> expression MENOS expression .)
    OR              reduce using rule 49 (expression -> expression MENOS expression .)
    TERN            reduce using rule 49 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 49 (expression -> expression MENOS expression .)
    COMA            reduce using rule 49 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 49 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 49 (expression -> expression MENOS expression .)
    LLAVEDER        reduce using rule 49 (expression -> expression MENOS expression .)
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61

  ! POR             [ reduce using rule 49 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 98

    (50) expression -> expression POR expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 50 (expression -> expression POR expression .)
    MAS             reduce using rule 50 (expression -> expression POR expression .)
    MENOS           reduce using rule 50 (expression -> expression POR expression .)
    POR             reduce using rule 50 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 50 (expression -> expression POR expression .)
    MAYOR           reduce using rule 50 (expression -> expression POR expression .)
    MENOR           reduce using rule 50 (expression -> expression POR expression .)
    MAYORIG         reduce using rule 50 (expression -> expression POR expression .)
    MENORIG         reduce using rule 50 (expression -> expression POR expression .)
    IGIG            reduce using rule 50 (expression -> expression POR expression .)
    DIF             reduce using rule 50 (expression -> expression POR expression .)
    AND             reduce using rule 50 (expression -> expression POR expression .)
    OR              reduce using rule 50 (expression -> expression POR expression .)
    TERN            reduce using rule 50 (expression -> expression POR expression .)
    PARDER          reduce using rule 50 (expression -> expression POR expression .)
    COMA            reduce using rule 50 (expression -> expression POR expression .)
    CORDER          reduce using rule 50 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 50 (expression -> expression POR expression .)
    LLAVEDER        reduce using rule 50 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 99

    (51) expression -> expression DIVIDIDO expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MAYOR           reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MENOR           reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MAYORIG         reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    MENORIG         reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    TERN            reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 51 (expression -> expression DIVIDIDO expression .)
    LLAVEDER        reduce using rule 51 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 100

    (52) expression -> expression MAYOR expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 52 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 52 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 52 (expression -> expression MAYOR expression .)
    IGIG            reduce using rule 52 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 52 (expression -> expression MAYOR expression .)
    AND             reduce using rule 52 (expression -> expression MAYOR expression .)
    OR              reduce using rule 52 (expression -> expression MAYOR expression .)
    TERN            reduce using rule 52 (expression -> expression MAYOR expression .)
    PARDER          reduce using rule 52 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 52 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 52 (expression -> expression MAYOR expression .)
    DOSPTS          reduce using rule 52 (expression -> expression MAYOR expression .)
    LLAVEDER        reduce using rule 52 (expression -> expression MAYOR expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65

  ! MAS             [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! MENOS           [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! POR             [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! MAYORIG         [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! MENORIG         [ reduce using rule 52 (expression -> expression MAYOR expression .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 101

    (53) expression -> expression MENOR expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 53 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 53 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 53 (expression -> expression MENOR expression .)
    IGIG            reduce using rule 53 (expression -> expression MENOR expression .)
    DIF             reduce using rule 53 (expression -> expression MENOR expression .)
    AND             reduce using rule 53 (expression -> expression MENOR expression .)
    OR              reduce using rule 53 (expression -> expression MENOR expression .)
    TERN            reduce using rule 53 (expression -> expression MENOR expression .)
    PARDER          reduce using rule 53 (expression -> expression MENOR expression .)
    COMA            reduce using rule 53 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 53 (expression -> expression MENOR expression .)
    DOSPTS          reduce using rule 53 (expression -> expression MENOR expression .)
    LLAVEDER        reduce using rule 53 (expression -> expression MENOR expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65

  ! MAS             [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! MENOS           [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! POR             [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! MAYORIG         [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! MENORIG         [ reduce using rule 53 (expression -> expression MENOR expression .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 102

    (54) expression -> expression MAYORIG expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 54 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 54 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 54 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 54 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 54 (expression -> expression MAYORIG expression .)
    IGIG            reduce using rule 54 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 54 (expression -> expression MAYORIG expression .)
    AND             reduce using rule 54 (expression -> expression MAYORIG expression .)
    OR              reduce using rule 54 (expression -> expression MAYORIG expression .)
    TERN            reduce using rule 54 (expression -> expression MAYORIG expression .)
    PARDER          reduce using rule 54 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 54 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 54 (expression -> expression MAYORIG expression .)
    DOSPTS          reduce using rule 54 (expression -> expression MAYORIG expression .)
    LLAVEDER        reduce using rule 54 (expression -> expression MAYORIG expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61

  ! MAS             [ reduce using rule 54 (expression -> expression MAYORIG expression .) ]
  ! MENOS           [ reduce using rule 54 (expression -> expression MAYORIG expression .) ]
  ! POR             [ reduce using rule 54 (expression -> expression MAYORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expression -> expression MAYORIG expression .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 103

    (55) expression -> expression MENORIG expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 55 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 55 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 55 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 55 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 55 (expression -> expression MENORIG expression .)
    IGIG            reduce using rule 55 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 55 (expression -> expression MENORIG expression .)
    AND             reduce using rule 55 (expression -> expression MENORIG expression .)
    OR              reduce using rule 55 (expression -> expression MENORIG expression .)
    TERN            reduce using rule 55 (expression -> expression MENORIG expression .)
    PARDER          reduce using rule 55 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 55 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 55 (expression -> expression MENORIG expression .)
    DOSPTS          reduce using rule 55 (expression -> expression MENORIG expression .)
    LLAVEDER        reduce using rule 55 (expression -> expression MENORIG expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61

  ! MAS             [ reduce using rule 55 (expression -> expression MENORIG expression .) ]
  ! MENOS           [ reduce using rule 55 (expression -> expression MENORIG expression .) ]
  ! POR             [ reduce using rule 55 (expression -> expression MENORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 55 (expression -> expression MENORIG expression .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIG         [ shift and go to state 64 ]
  ! MENORIG         [ shift and go to state 65 ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 104

    (56) expression -> expression IGIG expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 56 (expression -> expression IGIG expression .)
    PARDER          reduce using rule 56 (expression -> expression IGIG expression .)
    COMA            reduce using rule 56 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 56 (expression -> expression IGIG expression .)
    DOSPTS          reduce using rule 56 (expression -> expression IGIG expression .)
    LLAVEDER        reduce using rule 56 (expression -> expression IGIG expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70

  ! MAS             [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! MAYOR           [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! MENOR           [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! MAYORIG         [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! MENORIG         [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! IGIG            [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! DIF             [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! OR              [ reduce using rule 56 (expression -> expression IGIG expression .) ]
  ! TERN            [ reduce using rule 56 (expression -> expression IGIG expression .) ]


state 105

    (57) expression -> expression DIF expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 57 (expression -> expression DIF expression .)
    PARDER          reduce using rule 57 (expression -> expression DIF expression .)
    COMA            reduce using rule 57 (expression -> expression DIF expression .)
    CORDER          reduce using rule 57 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 57 (expression -> expression DIF expression .)
    LLAVEDER        reduce using rule 57 (expression -> expression DIF expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70

  ! MAS             [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! IGIG            [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 57 (expression -> expression DIF expression .) ]
  ! TERN            [ reduce using rule 57 (expression -> expression DIF expression .) ]


state 106

    (58) expression -> expression AND expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 58 (expression -> expression AND expression .)
    IGIG            reduce using rule 58 (expression -> expression AND expression .)
    DIF             reduce using rule 58 (expression -> expression AND expression .)
    AND             reduce using rule 58 (expression -> expression AND expression .)
    OR              reduce using rule 58 (expression -> expression AND expression .)
    TERN            reduce using rule 58 (expression -> expression AND expression .)
    PARDER          reduce using rule 58 (expression -> expression AND expression .)
    COMA            reduce using rule 58 (expression -> expression AND expression .)
    CORDER          reduce using rule 58 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 58 (expression -> expression AND expression .)
    LLAVEDER        reduce using rule 58 (expression -> expression AND expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65

  ! MAS             [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! MAYORIG         [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! MENORIG         [ reduce using rule 58 (expression -> expression AND expression .) ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 107

    (59) expression -> expression OR expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 59 (expression -> expression OR expression .)
    IGIG            reduce using rule 59 (expression -> expression OR expression .)
    DIF             reduce using rule 59 (expression -> expression OR expression .)
    OR              reduce using rule 59 (expression -> expression OR expression .)
    TERN            reduce using rule 59 (expression -> expression OR expression .)
    PARDER          reduce using rule 59 (expression -> expression OR expression .)
    COMA            reduce using rule 59 (expression -> expression OR expression .)
    CORDER          reduce using rule 59 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 59 (expression -> expression OR expression .)
    LLAVEDER        reduce using rule 59 (expression -> expression OR expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    AND             shift and go to state 68

  ! MAS             [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MAYORIG         [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MENORIG         [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! IGIG            [ shift and go to state 66 ]
  ! DIF             [ shift and go to state 67 ]
  ! OR              [ shift and go to state 69 ]
  ! TERN            [ shift and go to state 70 ]


state 108

    (62) expression -> expression TERN expression . DOSPTS expression
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 130
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 109

    (61) expression -> PARIZQ expression PARDER .

    PYC             reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    TERN            reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 61 (expression -> PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 61 (expression -> PARIZQ expression PARDER .)


state 110

    (69) listArray -> listArray CORIZQ expression . CORDER
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 131
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 111

    (70) listArray -> listArray PUNTO ID .

    CORIZQ          reduce using rule 70 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 70 (listArray -> listArray PUNTO ID .)
    PYC             reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 70 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 70 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MAYOR           reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MENOR           reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MAYORIG         reduce using rule 70 (listArray -> listArray PUNTO ID .)
    MENORIG         reduce using rule 70 (listArray -> listArray PUNTO ID .)
    IGIG            reduce using rule 70 (listArray -> listArray PUNTO ID .)
    DIF             reduce using rule 70 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 70 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 70 (listArray -> listArray PUNTO ID .)
    TERN            reduce using rule 70 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 70 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 70 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 70 (listArray -> listArray PUNTO ID .)
    DOSPTS          reduce using rule 70 (listArray -> listArray PUNTO ID .)
    LLAVEDER        reduce using rule 70 (listArray -> listArray PUNTO ID .)


state 112

    (66) expression -> CORIZQ expressionList CORDER .

    PYC             reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    IGIG            reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    PARDER          reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    DOSPTS          reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)
    LLAVEDER        reduce using rule 66 (expression -> CORIZQ expressionList CORDER .)


state 113

    (67) expression -> ID PARIZQ expressionList . PARDER
    (46) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 132
    COMA            shift and go to state 89


state 114

    (68) expression -> ID PARIZQ PARDER .

    PYC             reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MAYORIG         reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    MENORIG         reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    TERN            reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 68 (expression -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 68 (expression -> ID PARIZQ PARDER .)


state 115

    (35) attributeList -> ID . DOSPTS type PYC

    DOSPTS          shift and go to state 133


state 116

    (33) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList . LLAVEDER PYC
    (34) attributeList -> attributeList . ID DOSPTS type PYC

    LLAVEDER        shift and go to state 135
    ID              shift and go to state 134


state 117

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (46) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 136
    COMA            shift and go to state 89


state 118

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 137
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 119

    (19) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 138
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 120

    (22) interdeclaration -> VAR ID DOSPTS ID IG . LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEIZQ        shift and go to state 139


state 121

    (20) declaration -> VAR ID DOSPTS type IG . expression PYC
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 140
    listArray                      shift and go to state 43

state 122

    (21) arraydeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IG expression PYC

    CORDER          shift and go to state 141


state 123

    (28) call -> ID PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 28 (call -> ID PARIZQ expressionList PARDER PYC .)


state 124

    (46) expressionList -> expressionList COMA expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 46 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 46 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 46 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 125

    (30) functionstmt -> FUNC ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 142
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 126

    (38) functype -> DOSPTS type .

    LLAVEIZQ        reduce using rule 38 (functype -> DOSPTS type .)


state 127

    (31) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 31 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 31 (funcparams -> PARIZQ paramsList PARDER .)


state 128

    (36) paramsList -> paramsList COMA . ID DOSPTS type

    ID              shift and go to state 143


state 129

    (37) paramsList -> ID DOSPTS . type
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 144

state 130

    (62) expression -> expression TERN expression DOSPTS . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 145
    listArray                      shift and go to state 43

state 131

    (69) listArray -> listArray CORIZQ expression CORDER .

    CORIZQ          reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    PUNTO           reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    PYC             reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MAS             reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MENOS           reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    POR             reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MAYOR           reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MENOR           reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    MENORIG         reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    IGIG            reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    DIF             reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    AND             reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    OR              reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    TERN            reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    PARDER          reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    COMA            reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    CORDER          reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 69 (listArray -> listArray CORIZQ expression CORDER .)


state 132

    (67) expression -> ID PARIZQ expressionList PARDER .

    PYC             reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MAYOR           reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MENOR           reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MAYORIG         reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    MENORIG         reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    IGIG            reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    PARDER          reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)
    LLAVEDER        reduce using rule 67 (expression -> ID PARIZQ expressionList PARDER .)


state 133

    (35) attributeList -> ID DOSPTS . type PYC
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 146

state 134

    (34) attributeList -> attributeList ID . DOSPTS type PYC

    DOSPTS          shift and go to state 147


state 135

    (33) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER . PYC

    PYC             shift and go to state 148


state 136

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 149


state 137

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEDER        shift and go to state 150
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 138

    (19) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEDER        shift and go to state 151
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 139

    (22) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ . interfaceContent LLAVEDER PYC
    (23) interfaceContent -> . interfaceContent COMA ID DOSPTS expression
    (24) interfaceContent -> . ID DOSPTS expression

    ID              shift and go to state 152

    interfaceContent               shift and go to state 153

state 140

    (20) declaration -> VAR ID DOSPTS type IG expression . PYC
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 154
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 141

    (21) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IG expression PYC

    IG              shift and go to state 155


state 142

    (30) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (19) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (20) declaration -> . VAR ID DOSPTS type IG expression PYC
    (21) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (25) assignment -> . ID IG expression PYC
    (40) breakstmt -> . BREAK PYC
    (41) continuestmt -> . CONTINUE PYC
    (30) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (28) call -> . ID PARIZQ expressionList PARDER PYC
    (29) call -> . ID PARIZQ PARDER PYC
    (26) returnstmt -> . RETURN expression PYC
    (27) returnstmt -> . RETURN PYC
    (33) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC
    (22) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEDER        shift and go to state 156
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 143

    (36) paramsList -> paramsList COMA ID . DOSPTS type

    DOSPTS          shift and go to state 157


state 144

    (37) paramsList -> ID DOSPTS type .

    PARDER          reduce using rule 37 (paramsList -> ID DOSPTS type .)
    COMA            reduce using rule 37 (paramsList -> ID DOSPTS type .)


state 145

    (62) expression -> expression TERN expression DOSPTS expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    PARDER          reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    COMA            reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    CORDER          reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    DOSPTS          reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    LLAVEDER        reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70

  ! MAS             [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOS           [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! POR             [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIVIDIDO        [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYOR           [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOR           [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYORIG         [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENORIG         [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! IGIG            [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIF             [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! AND             [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! OR              [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]
  ! TERN            [ reduce using rule 62 (expression -> expression TERN expression DOSPTS expression .) ]


state 146

    (35) attributeList -> ID DOSPTS type . PYC

    PYC             shift and go to state 158


state 147

    (34) attributeList -> attributeList ID DOSPTS . type PYC
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 159

state 148

    (33) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .

    CONSOLE         reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    IF              reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    WHILE           reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    VAR             reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    ID              reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    BREAK           reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    CONTINUE        reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    FUNC            reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    RETURN          reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    INTERFACE       reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    $end            reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)
    LLAVEDER        reduce using rule 33 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PYC .)


state 149

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 150

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 151

    (19) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 19 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 152

    (24) interfaceContent -> ID . DOSPTS expression

    DOSPTS          shift and go to state 160


state 153

    (22) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent . LLAVEDER PYC
    (23) interfaceContent -> interfaceContent . COMA ID DOSPTS expression

    LLAVEDER        shift and go to state 161
    COMA            shift and go to state 162


state 154

    (20) declaration -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FUNC            reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    RETURN          reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    INTERFACE       reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 20 (declaration -> VAR ID DOSPTS type IG expression PYC .)


state 155

    (21) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG . expression PYC
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 163
    listArray                      shift and go to state 43

state 156

    (30) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 30 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 157

    (36) paramsList -> paramsList COMA ID DOSPTS . type
    (42) type -> . NUMBER
    (43) type -> . FLOAT
    (44) type -> . STRING
    (45) type -> . BOOL

    NUMBER          shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    BOOL            shift and go to state 86

    type                           shift and go to state 164

state 158

    (35) attributeList -> ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 35 (attributeList -> ID DOSPTS type PYC .)
    ID              reduce using rule 35 (attributeList -> ID DOSPTS type PYC .)


state 159

    (34) attributeList -> attributeList ID DOSPTS type . PYC

    PYC             shift and go to state 165


state 160

    (24) interfaceContent -> ID DOSPTS . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 166
    listArray                      shift and go to state 43

state 161

    (22) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER . PYC

    PYC             shift and go to state 167


state 162

    (23) interfaceContent -> interfaceContent COMA . ID DOSPTS expression

    ID              shift and go to state 168


state 163

    (21) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression . PYC
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 169
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 164

    (36) paramsList -> paramsList COMA ID DOSPTS type .

    PARDER          reduce using rule 36 (paramsList -> paramsList COMA ID DOSPTS type .)
    COMA            reduce using rule 36 (paramsList -> paramsList COMA ID DOSPTS type .)


state 165

    (34) attributeList -> attributeList ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 34 (attributeList -> attributeList ID DOSPTS type PYC .)
    ID              reduce using rule 34 (attributeList -> attributeList ID DOSPTS type PYC .)


state 166

    (24) interfaceContent -> ID DOSPTS expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 24 (interfaceContent -> ID DOSPTS expression .)
    COMA            reduce using rule 24 (interfaceContent -> ID DOSPTS expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70


state 167

    (22) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .

    CONSOLE         reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    IF              reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    WHILE           reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    VAR             reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    ID              reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    BREAK           reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONTINUE        reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FUNC            reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    RETURN          reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    INTERFACE       reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    $end            reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    LLAVEDER        reduce using rule 22 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)


state 168

    (23) interfaceContent -> interfaceContent COMA ID . DOSPTS expression

    DOSPTS          shift and go to state 170


state 169

    (21) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .

    CONSOLE         reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    IF              reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    WHILE           reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    VAR             reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    ID              reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    BREAK           reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    CONTINUE        reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    FUNC            reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    RETURN          reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    INTERFACE       reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    $end            reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    LLAVEDER        reduce using rule 21 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)


state 170

    (23) interfaceContent -> interfaceContent COMA ID DOSPTS . expression
    (48) expression -> . expression MAS expression
    (49) expression -> . expression MENOS expression
    (50) expression -> . expression POR expression
    (51) expression -> . expression DIVIDIDO expression
    (52) expression -> . expression MAYOR expression
    (53) expression -> . expression MENOR expression
    (54) expression -> . expression MAYORIG expression
    (55) expression -> . expression MENORIG expression
    (56) expression -> . expression IGIG expression
    (57) expression -> . expression DIF expression
    (58) expression -> . expression AND expression
    (59) expression -> . expression OR expression
    (60) expression -> . NOT expression
    (61) expression -> . PARIZQ expression PARDER
    (62) expression -> . expression TERN expression DOSPTS expression
    (63) expression -> . ENTERO
    (64) expression -> . CADENA
    (65) expression -> . listArray
    (66) expression -> . CORIZQ expressionList CORDER
    (67) expression -> . ID PARIZQ expressionList PARDER
    (68) expression -> . ID PARIZQ PARDER
    (69) listArray -> . listArray CORIZQ expression CORDER
    (70) listArray -> . listArray PUNTO ID
    (71) listArray -> . ID

    NOT             shift and go to state 39
    PARIZQ          shift and go to state 40
    ENTERO          shift and go to state 41
    CADENA          shift and go to state 42
    CORIZQ          shift and go to state 44
    ID              shift and go to state 45

    expression                     shift and go to state 171
    listArray                      shift and go to state 43

state 171

    (23) interfaceContent -> interfaceContent COMA ID DOSPTS expression .
    (48) expression -> expression . MAS expression
    (49) expression -> expression . MENOS expression
    (50) expression -> expression . POR expression
    (51) expression -> expression . DIVIDIDO expression
    (52) expression -> expression . MAYOR expression
    (53) expression -> expression . MENOR expression
    (54) expression -> expression . MAYORIG expression
    (55) expression -> expression . MENORIG expression
    (56) expression -> expression . IGIG expression
    (57) expression -> expression . DIF expression
    (58) expression -> expression . AND expression
    (59) expression -> expression . OR expression
    (62) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 23 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    COMA            reduce using rule 23 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIG         shift and go to state 64
    MENORIG         shift and go to state 65
    IGIG            shift and go to state 66
    DIF             shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    TERN            shift and go to state 70

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for POR in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 71 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 71 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 71 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 71 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 71 resolved as shift
WARNING: shift/reduce conflict for DIF in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for TERN in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 104 resolved as shift
WARNING: shift/reduce conflict for POR in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 104 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 104 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 104 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 104 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 104 resolved as shift
WARNING: shift/reduce conflict for DIF in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for TERN in state 104 resolved as shift
WARNING: shift/reduce conflict for MAS in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 105 resolved as shift
WARNING: shift/reduce conflict for POR in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 105 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 105 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 105 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 105 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 105 resolved as shift
WARNING: shift/reduce conflict for DIF in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for TERN in state 105 resolved as shift
WARNING: shift/reduce conflict for MAS in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for POR in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 145 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 145 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 145 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 145 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 145 resolved as shift
WARNING: shift/reduce conflict for DIF in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for TERN in state 145 resolved as shift
