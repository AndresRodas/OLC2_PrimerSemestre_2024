
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOCADENA COMA CONSOLE DIVIDIDO ENTERO FLOAT LOG MAS MENOS PARDER PARIZQ POR PUNTO PUNTOCOMAinstrucciones : instrucciones instruccion\n                    | instruccion instruccion : CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMAexpressionList : expressionList COMA expression\n                    | expression expression : expression MAS expressionexpression : expression MENOS expressionexpression : expression POR expressionexpression : expression DIVIDIDO expressionexpression : PARIZQ expression PARDERexpression    : ENTERO\n                    | CADENA'
    
_lr_action_items = {'CONSOLE':([0,1,2,4,21,],[3,3,-2,-1,-3,]),'$end':([1,2,4,21,],[0,-2,-1,-3,]),'PUNTO':([3,],[5,]),'LOG':([5,],[6,]),'PARIZQ':([6,7,8,15,16,17,18,19,],[7,8,8,8,8,8,8,8,]),'ENTERO':([7,8,15,16,17,18,19,],[11,11,11,11,11,11,11,]),'CADENA':([7,8,15,16,17,18,19,],[12,12,12,12,12,12,12,]),'PARDER':([9,10,11,12,13,20,22,23,24,25,26,],[14,-5,-11,-12,20,-10,-4,-6,-7,-8,-9,]),'COMA':([9,10,11,12,20,22,23,24,25,26,],[15,-5,-11,-12,-10,-4,-6,-7,-8,-9,]),'MAS':([10,11,12,13,20,22,23,24,25,26,],[16,-11,-12,16,-10,16,-6,-7,-8,-9,]),'MENOS':([10,11,12,13,20,22,23,24,25,26,],[17,-11,-12,17,-10,17,-6,-7,-8,-9,]),'POR':([10,11,12,13,20,22,23,24,25,26,],[18,-11,-12,18,-10,18,18,18,-8,-9,]),'DIVIDIDO':([10,11,12,13,20,22,23,24,25,26,],[19,-11,-12,19,-10,19,19,19,-8,-9,]),'PUNTOCOMA':([14,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'instruccion':([0,1,],[2,4,]),'expressionList':([7,],[9,]),'expression':([7,8,15,16,17,18,19,],[10,13,22,23,24,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','parser.py',106),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','parser.py',107),
  ('instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA','instruccion',7,'p_instruccion_console','parser.py',115),
  ('expressionList -> expressionList COMA expression','expressionList',3,'p_expression_list','parser.py',121),
  ('expressionList -> expression','expressionList',1,'p_expression_list','parser.py',122),
  ('expression -> expression MAS expression','expression',3,'p_expression_add','parser.py',129),
  ('expression -> expression MENOS expression','expression',3,'p_expression_sub','parser.py',134),
  ('expression -> expression POR expression','expression',3,'p_expression_mult','parser.py',139),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression_div','parser.py',144),
  ('expression -> PARIZQ expression PARDER','expression',3,'p_expression_agrupacion','parser.py',149),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','parser.py',153),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','parser.py',154),
]
