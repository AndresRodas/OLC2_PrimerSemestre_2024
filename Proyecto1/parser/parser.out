Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECIMAL

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> whileinstruction
Rule 7     instruccion -> declaration
Rule 8     instruccion -> arraydeclaration
Rule 9     instruccion -> assignment
Rule 10    instruccion -> breakstmt
Rule 11    instruccion -> continuestmt
Rule 12    instruccion -> functionstmt
Rule 13    instruccion -> call
Rule 14    instruccion -> returnstmt
Rule 15    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 16    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 17    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 18    declaration -> VAR ID DOSPTS type IG expression PYC
Rule 19    arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
Rule 20    assignment -> ID IG expression PYC
Rule 21    returnstmt -> RETURN expression PYC
Rule 22    returnstmt -> RETURN PYC
Rule 23    call -> ID PARIZQ expressionList PARDER PYC
Rule 24    call -> ID PARIZQ PARDER PYC
Rule 25    functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 26    funcparams -> PARIZQ paramsList PARDER
Rule 27    funcparams -> PARIZQ PARDER
Rule 28    paramsList -> paramsList COMA ID DOSPTS type
Rule 29    paramsList -> ID DOSPTS type
Rule 30    functype -> DOSPTS type
Rule 31    functype -> <empty>
Rule 32    breakstmt -> BREAK PYC
Rule 33    continuestmt -> CONTINUE PYC
Rule 34    type -> NUMBER
Rule 35    type -> FLOAT
Rule 36    type -> STRING
Rule 37    type -> BOOL
Rule 38    expressionList -> expressionList COMA expression
Rule 39    expressionList -> expression
Rule 40    expression -> expression MAS expression
Rule 41    expression -> expression MENOS expression
Rule 42    expression -> expression POR expression
Rule 43    expression -> expression DIVIDIDO expression
Rule 44    expression -> expression MAYOR expression
Rule 45    expression -> expression MENOR expression
Rule 46    expression -> expression MAYORIG expression
Rule 47    expression -> expression MENORIG expression
Rule 48    expression -> expression IGIG expression
Rule 49    expression -> expression DIF expression
Rule 50    expression -> expression AND expression
Rule 51    expression -> expression OR expression
Rule 52    expression -> NOT expression
Rule 53    expression -> PARIZQ expression PARDER
Rule 54    expression -> expression TERN expression DOSPTS expression
Rule 55    expression -> ENTERO
Rule 56    expression -> CADENA
Rule 57    expression -> listArray
Rule 58    expression -> CORIZQ expressionList CORDER
Rule 59    expression -> ID PARIZQ expressionList PARDER
Rule 60    expression -> ID PARIZQ PARDER
Rule 61    listArray -> listArray CORIZQ expression CORDER
Rule 62    listArray -> listArray PUNTO ID
Rule 63    listArray -> ID

Terminals, with rules where they appear

AND                  : 50
BOOL                 : 37
BREAK                : 32
CADENA               : 56
COMA                 : 28 38
CONSOLE              : 15
CONTINUE             : 33
CORDER               : 19 58 61
CORIZQ               : 19 58 61
DECIMAL              : 
DIF                  : 49
DIVIDIDO             : 43
DOSPTS               : 18 19 28 29 30 54
ENTERO               : 55
FLOAT                : 35
FUNC                 : 25
ID                   : 18 19 20 23 24 25 28 29 59 60 62 63
IF                   : 16
IG                   : 18 19 20
IGIG                 : 48
LLAVEDER             : 16 17 25
LLAVEIZQ             : 16 17 25
LOG                  : 15
MAS                  : 40
MAYOR                : 44
MAYORIG              : 46
MENOR                : 45
MENORIG              : 47
MENOS                : 41
NOT                  : 52
NUMBER               : 34
OR                   : 51
PARDER               : 15 16 17 23 24 26 27 53 59 60
PARIZQ               : 15 16 17 23 24 26 27 53 59 60
POR                  : 42
PUNTO                : 15 62
PYC                  : 15 18 19 20 21 22 23 24 32 33
RETURN               : 21 22
STRING               : 36
TERN                 : 54
VAR                  : 18 19
WHILE                : 17
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 8
assignment           : 9
block                : 1 2 16 17 25
breakstmt            : 10
call                 : 13
continuestmt         : 11
declaration          : 7
expression           : 16 17 18 19 20 21 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 54 54 54 61
expressionList       : 15 23 38 58 59
funcparams           : 25
functionstmt         : 12
functype             : 25
ifinstruction        : 5
instruccion          : 2 3
listArray            : 57 61 62
paramsList           : 26 28
print                : 4
returnstmt           : 14
s                    : 0
type                 : 18 19 28 29 30
whileinstruction     : 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    instruccion                    shift and go to state 24
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    FUNC            reduce using rule 4 (instruccion -> print .)
    RETURN          reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> whileinstruction .)
    IF              reduce using rule 6 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 6 (instruccion -> whileinstruction .)
    VAR             reduce using rule 6 (instruccion -> whileinstruction .)
    ID              reduce using rule 6 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 6 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> whileinstruction .)
    FUNC            reduce using rule 6 (instruccion -> whileinstruction .)
    RETURN          reduce using rule 6 (instruccion -> whileinstruction .)
    $end            reduce using rule 6 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> whileinstruction .)


state 7

    (7) instruccion -> declaration .

    CONSOLE         reduce using rule 7 (instruccion -> declaration .)
    IF              reduce using rule 7 (instruccion -> declaration .)
    WHILE           reduce using rule 7 (instruccion -> declaration .)
    VAR             reduce using rule 7 (instruccion -> declaration .)
    ID              reduce using rule 7 (instruccion -> declaration .)
    BREAK           reduce using rule 7 (instruccion -> declaration .)
    CONTINUE        reduce using rule 7 (instruccion -> declaration .)
    FUNC            reduce using rule 7 (instruccion -> declaration .)
    RETURN          reduce using rule 7 (instruccion -> declaration .)
    $end            reduce using rule 7 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 7 (instruccion -> declaration .)


state 8

    (8) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 8 (instruccion -> arraydeclaration .)
    IF              reduce using rule 8 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 8 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 8 (instruccion -> arraydeclaration .)
    ID              reduce using rule 8 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 8 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 8 (instruccion -> arraydeclaration .)
    FUNC            reduce using rule 8 (instruccion -> arraydeclaration .)
    RETURN          reduce using rule 8 (instruccion -> arraydeclaration .)
    $end            reduce using rule 8 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 8 (instruccion -> arraydeclaration .)


state 9

    (9) instruccion -> assignment .

    CONSOLE         reduce using rule 9 (instruccion -> assignment .)
    IF              reduce using rule 9 (instruccion -> assignment .)
    WHILE           reduce using rule 9 (instruccion -> assignment .)
    VAR             reduce using rule 9 (instruccion -> assignment .)
    ID              reduce using rule 9 (instruccion -> assignment .)
    BREAK           reduce using rule 9 (instruccion -> assignment .)
    CONTINUE        reduce using rule 9 (instruccion -> assignment .)
    FUNC            reduce using rule 9 (instruccion -> assignment .)
    RETURN          reduce using rule 9 (instruccion -> assignment .)
    $end            reduce using rule 9 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 9 (instruccion -> assignment .)


state 10

    (10) instruccion -> breakstmt .

    CONSOLE         reduce using rule 10 (instruccion -> breakstmt .)
    IF              reduce using rule 10 (instruccion -> breakstmt .)
    WHILE           reduce using rule 10 (instruccion -> breakstmt .)
    VAR             reduce using rule 10 (instruccion -> breakstmt .)
    ID              reduce using rule 10 (instruccion -> breakstmt .)
    BREAK           reduce using rule 10 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 10 (instruccion -> breakstmt .)
    FUNC            reduce using rule 10 (instruccion -> breakstmt .)
    RETURN          reduce using rule 10 (instruccion -> breakstmt .)
    $end            reduce using rule 10 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 10 (instruccion -> breakstmt .)


state 11

    (11) instruccion -> continuestmt .

    CONSOLE         reduce using rule 11 (instruccion -> continuestmt .)
    IF              reduce using rule 11 (instruccion -> continuestmt .)
    WHILE           reduce using rule 11 (instruccion -> continuestmt .)
    VAR             reduce using rule 11 (instruccion -> continuestmt .)
    ID              reduce using rule 11 (instruccion -> continuestmt .)
    BREAK           reduce using rule 11 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 11 (instruccion -> continuestmt .)
    FUNC            reduce using rule 11 (instruccion -> continuestmt .)
    RETURN          reduce using rule 11 (instruccion -> continuestmt .)
    $end            reduce using rule 11 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 11 (instruccion -> continuestmt .)


state 12

    (12) instruccion -> functionstmt .

    CONSOLE         reduce using rule 12 (instruccion -> functionstmt .)
    IF              reduce using rule 12 (instruccion -> functionstmt .)
    WHILE           reduce using rule 12 (instruccion -> functionstmt .)
    VAR             reduce using rule 12 (instruccion -> functionstmt .)
    ID              reduce using rule 12 (instruccion -> functionstmt .)
    BREAK           reduce using rule 12 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 12 (instruccion -> functionstmt .)
    FUNC            reduce using rule 12 (instruccion -> functionstmt .)
    RETURN          reduce using rule 12 (instruccion -> functionstmt .)
    $end            reduce using rule 12 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 12 (instruccion -> functionstmt .)


state 13

    (13) instruccion -> call .

    CONSOLE         reduce using rule 13 (instruccion -> call .)
    IF              reduce using rule 13 (instruccion -> call .)
    WHILE           reduce using rule 13 (instruccion -> call .)
    VAR             reduce using rule 13 (instruccion -> call .)
    ID              reduce using rule 13 (instruccion -> call .)
    BREAK           reduce using rule 13 (instruccion -> call .)
    CONTINUE        reduce using rule 13 (instruccion -> call .)
    FUNC            reduce using rule 13 (instruccion -> call .)
    RETURN          reduce using rule 13 (instruccion -> call .)
    $end            reduce using rule 13 (instruccion -> call .)
    LLAVEDER        reduce using rule 13 (instruccion -> call .)


state 14

    (14) instruccion -> returnstmt .

    CONSOLE         reduce using rule 14 (instruccion -> returnstmt .)
    IF              reduce using rule 14 (instruccion -> returnstmt .)
    WHILE           reduce using rule 14 (instruccion -> returnstmt .)
    VAR             reduce using rule 14 (instruccion -> returnstmt .)
    ID              reduce using rule 14 (instruccion -> returnstmt .)
    BREAK           reduce using rule 14 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 14 (instruccion -> returnstmt .)
    FUNC            reduce using rule 14 (instruccion -> returnstmt .)
    RETURN          reduce using rule 14 (instruccion -> returnstmt .)
    $end            reduce using rule 14 (instruccion -> returnstmt .)
    LLAVEDER        reduce using rule 14 (instruccion -> returnstmt .)


state 15

    (15) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 25


state 16

    (16) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 26


state 17

    (17) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 27


state 18

    (18) declaration -> VAR . ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IG expression PYC

    ID              shift and go to state 28


state 19

    (20) assignment -> ID . IG expression PYC
    (23) call -> ID . PARIZQ expressionList PARDER PYC
    (24) call -> ID . PARIZQ PARDER PYC

    IG              shift and go to state 29
    PARIZQ          shift and go to state 30


state 20

    (32) breakstmt -> BREAK . PYC

    PYC             shift and go to state 31


state 21

    (33) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 32


state 22

    (25) functionstmt -> FUNC . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 33


state 23

    (21) returnstmt -> RETURN . expression PYC
    (22) returnstmt -> RETURN . PYC
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    PYC             shift and go to state 35
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 34
    listArray                      shift and go to state 40

state 24

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)


state 25

    (15) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 43


state 26

    (16) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 44
    listArray                      shift and go to state 40

state 27

    (17) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 45
    listArray                      shift and go to state 40

state 28

    (18) declaration -> VAR ID . DOSPTS type IG expression PYC
    (19) arraydeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IG expression PYC

    DOSPTS          shift and go to state 46


state 29

    (20) assignment -> ID IG . expression PYC
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 47
    listArray                      shift and go to state 40

state 30

    (23) call -> ID PARIZQ . expressionList PARDER PYC
    (24) call -> ID PARIZQ . PARDER PYC
    (38) expressionList -> . expressionList COMA expression
    (39) expressionList -> . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    PARDER          shift and go to state 49
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expressionList                 shift and go to state 48
    expression                     shift and go to state 50
    listArray                      shift and go to state 40

state 31

    (32) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 32 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 32 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 32 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 32 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 32 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 32 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 32 (breakstmt -> BREAK PYC .)
    FUNC            reduce using rule 32 (breakstmt -> BREAK PYC .)
    RETURN          reduce using rule 32 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 32 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 32 (breakstmt -> BREAK PYC .)


state 32

    (33) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    FUNC            reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    RETURN          reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 33 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 33 (continuestmt -> CONTINUE PYC .)


state 33

    (25) functionstmt -> FUNC ID . funcparams functype LLAVEIZQ block LLAVEDER
    (26) funcparams -> . PARIZQ paramsList PARDER
    (27) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 52

    funcparams                     shift and go to state 51

state 34

    (21) returnstmt -> RETURN expression . PYC
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 53
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 35

    (22) returnstmt -> RETURN PYC .

    CONSOLE         reduce using rule 22 (returnstmt -> RETURN PYC .)
    IF              reduce using rule 22 (returnstmt -> RETURN PYC .)
    WHILE           reduce using rule 22 (returnstmt -> RETURN PYC .)
    VAR             reduce using rule 22 (returnstmt -> RETURN PYC .)
    ID              reduce using rule 22 (returnstmt -> RETURN PYC .)
    BREAK           reduce using rule 22 (returnstmt -> RETURN PYC .)
    CONTINUE        reduce using rule 22 (returnstmt -> RETURN PYC .)
    FUNC            reduce using rule 22 (returnstmt -> RETURN PYC .)
    RETURN          reduce using rule 22 (returnstmt -> RETURN PYC .)
    $end            reduce using rule 22 (returnstmt -> RETURN PYC .)
    LLAVEDER        reduce using rule 22 (returnstmt -> RETURN PYC .)


state 36

    (52) expression -> NOT . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 67
    listArray                      shift and go to state 40

state 37

    (53) expression -> PARIZQ . expression PARDER
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 68
    listArray                      shift and go to state 40

state 38

    (55) expression -> ENTERO .

    PYC             reduce using rule 55 (expression -> ENTERO .)
    MAS             reduce using rule 55 (expression -> ENTERO .)
    MENOS           reduce using rule 55 (expression -> ENTERO .)
    POR             reduce using rule 55 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 55 (expression -> ENTERO .)
    MAYOR           reduce using rule 55 (expression -> ENTERO .)
    MENOR           reduce using rule 55 (expression -> ENTERO .)
    MAYORIG         reduce using rule 55 (expression -> ENTERO .)
    MENORIG         reduce using rule 55 (expression -> ENTERO .)
    IGIG            reduce using rule 55 (expression -> ENTERO .)
    DIF             reduce using rule 55 (expression -> ENTERO .)
    AND             reduce using rule 55 (expression -> ENTERO .)
    OR              reduce using rule 55 (expression -> ENTERO .)
    TERN            reduce using rule 55 (expression -> ENTERO .)
    PARDER          reduce using rule 55 (expression -> ENTERO .)
    COMA            reduce using rule 55 (expression -> ENTERO .)
    CORDER          reduce using rule 55 (expression -> ENTERO .)
    DOSPTS          reduce using rule 55 (expression -> ENTERO .)


state 39

    (56) expression -> CADENA .

    PYC             reduce using rule 56 (expression -> CADENA .)
    MAS             reduce using rule 56 (expression -> CADENA .)
    MENOS           reduce using rule 56 (expression -> CADENA .)
    POR             reduce using rule 56 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 56 (expression -> CADENA .)
    MAYOR           reduce using rule 56 (expression -> CADENA .)
    MENOR           reduce using rule 56 (expression -> CADENA .)
    MAYORIG         reduce using rule 56 (expression -> CADENA .)
    MENORIG         reduce using rule 56 (expression -> CADENA .)
    IGIG            reduce using rule 56 (expression -> CADENA .)
    DIF             reduce using rule 56 (expression -> CADENA .)
    AND             reduce using rule 56 (expression -> CADENA .)
    OR              reduce using rule 56 (expression -> CADENA .)
    TERN            reduce using rule 56 (expression -> CADENA .)
    PARDER          reduce using rule 56 (expression -> CADENA .)
    COMA            reduce using rule 56 (expression -> CADENA .)
    CORDER          reduce using rule 56 (expression -> CADENA .)
    DOSPTS          reduce using rule 56 (expression -> CADENA .)


state 40

    (57) expression -> listArray .
    (61) listArray -> listArray . CORIZQ expression CORDER
    (62) listArray -> listArray . PUNTO ID

    PYC             reduce using rule 57 (expression -> listArray .)
    MAS             reduce using rule 57 (expression -> listArray .)
    MENOS           reduce using rule 57 (expression -> listArray .)
    POR             reduce using rule 57 (expression -> listArray .)
    DIVIDIDO        reduce using rule 57 (expression -> listArray .)
    MAYOR           reduce using rule 57 (expression -> listArray .)
    MENOR           reduce using rule 57 (expression -> listArray .)
    MAYORIG         reduce using rule 57 (expression -> listArray .)
    MENORIG         reduce using rule 57 (expression -> listArray .)
    IGIG            reduce using rule 57 (expression -> listArray .)
    DIF             reduce using rule 57 (expression -> listArray .)
    AND             reduce using rule 57 (expression -> listArray .)
    OR              reduce using rule 57 (expression -> listArray .)
    TERN            reduce using rule 57 (expression -> listArray .)
    PARDER          reduce using rule 57 (expression -> listArray .)
    COMA            reduce using rule 57 (expression -> listArray .)
    CORDER          reduce using rule 57 (expression -> listArray .)
    DOSPTS          reduce using rule 57 (expression -> listArray .)
    CORIZQ          shift and go to state 69
    PUNTO           shift and go to state 70


state 41

    (58) expression -> CORIZQ . expressionList CORDER
    (38) expressionList -> . expressionList COMA expression
    (39) expressionList -> . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expressionList                 shift and go to state 71
    expression                     shift and go to state 50
    listArray                      shift and go to state 40

state 42

    (59) expression -> ID . PARIZQ expressionList PARDER
    (60) expression -> ID . PARIZQ PARDER
    (63) listArray -> ID .

    PARIZQ          shift and go to state 72
    CORIZQ          reduce using rule 63 (listArray -> ID .)
    PUNTO           reduce using rule 63 (listArray -> ID .)
    PYC             reduce using rule 63 (listArray -> ID .)
    MAS             reduce using rule 63 (listArray -> ID .)
    MENOS           reduce using rule 63 (listArray -> ID .)
    POR             reduce using rule 63 (listArray -> ID .)
    DIVIDIDO        reduce using rule 63 (listArray -> ID .)
    MAYOR           reduce using rule 63 (listArray -> ID .)
    MENOR           reduce using rule 63 (listArray -> ID .)
    MAYORIG         reduce using rule 63 (listArray -> ID .)
    MENORIG         reduce using rule 63 (listArray -> ID .)
    IGIG            reduce using rule 63 (listArray -> ID .)
    DIF             reduce using rule 63 (listArray -> ID .)
    AND             reduce using rule 63 (listArray -> ID .)
    OR              reduce using rule 63 (listArray -> ID .)
    TERN            reduce using rule 63 (listArray -> ID .)
    PARDER          reduce using rule 63 (listArray -> ID .)
    COMA            reduce using rule 63 (listArray -> ID .)
    CORDER          reduce using rule 63 (listArray -> ID .)
    DOSPTS          reduce using rule 63 (listArray -> ID .)


state 43

    (15) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 73


state 44

    (16) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 74
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 45

    (17) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 75
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 46

    (18) declaration -> VAR ID DOSPTS . type IG expression PYC
    (19) arraydeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IG expression PYC
    (34) type -> . NUMBER
    (35) type -> . FLOAT
    (36) type -> . STRING
    (37) type -> . BOOL

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    BOOL            shift and go to state 80

    type                           shift and go to state 76

state 47

    (20) assignment -> ID IG expression . PYC
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 81
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 48

    (23) call -> ID PARIZQ expressionList . PARDER PYC
    (38) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 82
    COMA            shift and go to state 83


state 49

    (24) call -> ID PARIZQ PARDER . PYC

    PYC             shift and go to state 84


state 50

    (39) expressionList -> expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 39 (expressionList -> expression .)
    COMA            reduce using rule 39 (expressionList -> expression .)
    CORDER          reduce using rule 39 (expressionList -> expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 51

    (25) functionstmt -> FUNC ID funcparams . functype LLAVEIZQ block LLAVEDER
    (30) functype -> . DOSPTS type
    (31) functype -> .

    DOSPTS          shift and go to state 86
    LLAVEIZQ        reduce using rule 31 (functype -> .)

    functype                       shift and go to state 85

state 52

    (26) funcparams -> PARIZQ . paramsList PARDER
    (27) funcparams -> PARIZQ . PARDER
    (28) paramsList -> . paramsList COMA ID DOSPTS type
    (29) paramsList -> . ID DOSPTS type

    PARDER          shift and go to state 88
    ID              shift and go to state 89

    paramsList                     shift and go to state 87

state 53

    (21) returnstmt -> RETURN expression PYC .

    CONSOLE         reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    IF              reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    WHILE           reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    VAR             reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    ID              reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    BREAK           reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    CONTINUE        reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    FUNC            reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    RETURN          reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    $end            reduce using rule 21 (returnstmt -> RETURN expression PYC .)
    LLAVEDER        reduce using rule 21 (returnstmt -> RETURN expression PYC .)


state 54

    (40) expression -> expression MAS . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 90
    listArray                      shift and go to state 40

state 55

    (41) expression -> expression MENOS . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 91
    listArray                      shift and go to state 40

state 56

    (42) expression -> expression POR . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 92
    listArray                      shift and go to state 40

state 57

    (43) expression -> expression DIVIDIDO . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 93
    listArray                      shift and go to state 40

state 58

    (44) expression -> expression MAYOR . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 94
    listArray                      shift and go to state 40

state 59

    (45) expression -> expression MENOR . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 95
    listArray                      shift and go to state 40

state 60

    (46) expression -> expression MAYORIG . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 96
    listArray                      shift and go to state 40

state 61

    (47) expression -> expression MENORIG . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 97
    listArray                      shift and go to state 40

state 62

    (48) expression -> expression IGIG . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 98
    listArray                      shift and go to state 40

state 63

    (49) expression -> expression DIF . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 99
    listArray                      shift and go to state 40

state 64

    (50) expression -> expression AND . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 100
    listArray                      shift and go to state 40

state 65

    (51) expression -> expression OR . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 101
    listArray                      shift and go to state 40

state 66

    (54) expression -> expression TERN . expression DOSPTS expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 102
    listArray                      shift and go to state 40

state 67

    (52) expression -> NOT expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 52 (expression -> NOT expression .)
    PARDER          reduce using rule 52 (expression -> NOT expression .)
    COMA            reduce using rule 52 (expression -> NOT expression .)
    CORDER          reduce using rule 52 (expression -> NOT expression .)
    DOSPTS          reduce using rule 52 (expression -> NOT expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66

  ! MAS             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MENOS           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! POR             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! DIVIDIDO        [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MAYORIG         [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MENORIG         [ reduce using rule 52 (expression -> NOT expression .) ]
  ! IGIG            [ reduce using rule 52 (expression -> NOT expression .) ]
  ! DIF             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 52 (expression -> NOT expression .) ]
  ! TERN            [ reduce using rule 52 (expression -> NOT expression .) ]


state 68

    (53) expression -> PARIZQ expression . PARDER
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 103
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 69

    (61) listArray -> listArray CORIZQ . expression CORDER
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    listArray                      shift and go to state 40
    expression                     shift and go to state 104

state 70

    (62) listArray -> listArray PUNTO . ID

    ID              shift and go to state 105


state 71

    (58) expression -> CORIZQ expressionList . CORDER
    (38) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 106
    COMA            shift and go to state 83


state 72

    (59) expression -> ID PARIZQ . expressionList PARDER
    (60) expression -> ID PARIZQ . PARDER
    (38) expressionList -> . expressionList COMA expression
    (39) expressionList -> . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    PARDER          shift and go to state 108
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expressionList                 shift and go to state 107
    expression                     shift and go to state 50
    listArray                      shift and go to state 40

state 73

    (15) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (38) expressionList -> . expressionList COMA expression
    (39) expressionList -> . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expressionList                 shift and go to state 109
    expression                     shift and go to state 50
    listArray                      shift and go to state 40

state 74

    (16) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 110


state 75

    (17) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 111


state 76

    (18) declaration -> VAR ID DOSPTS type . IG expression PYC
    (19) arraydeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IG expression PYC

    IG              shift and go to state 112
    CORIZQ          shift and go to state 113


state 77

    (34) type -> NUMBER .

    IG              reduce using rule 34 (type -> NUMBER .)
    CORIZQ          reduce using rule 34 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 34 (type -> NUMBER .)
    PARDER          reduce using rule 34 (type -> NUMBER .)
    COMA            reduce using rule 34 (type -> NUMBER .)


state 78

    (35) type -> FLOAT .

    IG              reduce using rule 35 (type -> FLOAT .)
    CORIZQ          reduce using rule 35 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 35 (type -> FLOAT .)
    PARDER          reduce using rule 35 (type -> FLOAT .)
    COMA            reduce using rule 35 (type -> FLOAT .)


state 79

    (36) type -> STRING .

    IG              reduce using rule 36 (type -> STRING .)
    CORIZQ          reduce using rule 36 (type -> STRING .)
    LLAVEIZQ        reduce using rule 36 (type -> STRING .)
    PARDER          reduce using rule 36 (type -> STRING .)
    COMA            reduce using rule 36 (type -> STRING .)


state 80

    (37) type -> BOOL .

    IG              reduce using rule 37 (type -> BOOL .)
    CORIZQ          reduce using rule 37 (type -> BOOL .)
    LLAVEIZQ        reduce using rule 37 (type -> BOOL .)
    PARDER          reduce using rule 37 (type -> BOOL .)
    COMA            reduce using rule 37 (type -> BOOL .)


state 81

    (20) assignment -> ID IG expression PYC .

    CONSOLE         reduce using rule 20 (assignment -> ID IG expression PYC .)
    IF              reduce using rule 20 (assignment -> ID IG expression PYC .)
    WHILE           reduce using rule 20 (assignment -> ID IG expression PYC .)
    VAR             reduce using rule 20 (assignment -> ID IG expression PYC .)
    ID              reduce using rule 20 (assignment -> ID IG expression PYC .)
    BREAK           reduce using rule 20 (assignment -> ID IG expression PYC .)
    CONTINUE        reduce using rule 20 (assignment -> ID IG expression PYC .)
    FUNC            reduce using rule 20 (assignment -> ID IG expression PYC .)
    RETURN          reduce using rule 20 (assignment -> ID IG expression PYC .)
    $end            reduce using rule 20 (assignment -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 20 (assignment -> ID IG expression PYC .)


state 82

    (23) call -> ID PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 114


state 83

    (38) expressionList -> expressionList COMA . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 115
    listArray                      shift and go to state 40

state 84

    (24) call -> ID PARIZQ PARDER PYC .

    CONSOLE         reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    IF              reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    WHILE           reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    VAR             reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    ID              reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    BREAK           reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    CONTINUE        reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    FUNC            reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    RETURN          reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    $end            reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 24 (call -> ID PARIZQ PARDER PYC .)


state 85

    (25) functionstmt -> FUNC ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 116


state 86

    (30) functype -> DOSPTS . type
    (34) type -> . NUMBER
    (35) type -> . FLOAT
    (36) type -> . STRING
    (37) type -> . BOOL

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    BOOL            shift and go to state 80

    type                           shift and go to state 117

state 87

    (26) funcparams -> PARIZQ paramsList . PARDER
    (28) paramsList -> paramsList . COMA ID DOSPTS type

    PARDER          shift and go to state 118
    COMA            shift and go to state 119


state 88

    (27) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 27 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 27 (funcparams -> PARIZQ PARDER .)


state 89

    (29) paramsList -> ID . DOSPTS type

    DOSPTS          shift and go to state 120


state 90

    (40) expression -> expression MAS expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 40 (expression -> expression MAS expression .)
    MAS             reduce using rule 40 (expression -> expression MAS expression .)
    MENOS           reduce using rule 40 (expression -> expression MAS expression .)
    MAYOR           reduce using rule 40 (expression -> expression MAS expression .)
    MENOR           reduce using rule 40 (expression -> expression MAS expression .)
    MAYORIG         reduce using rule 40 (expression -> expression MAS expression .)
    MENORIG         reduce using rule 40 (expression -> expression MAS expression .)
    IGIG            reduce using rule 40 (expression -> expression MAS expression .)
    DIF             reduce using rule 40 (expression -> expression MAS expression .)
    AND             reduce using rule 40 (expression -> expression MAS expression .)
    OR              reduce using rule 40 (expression -> expression MAS expression .)
    TERN            reduce using rule 40 (expression -> expression MAS expression .)
    PARDER          reduce using rule 40 (expression -> expression MAS expression .)
    COMA            reduce using rule 40 (expression -> expression MAS expression .)
    CORDER          reduce using rule 40 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 40 (expression -> expression MAS expression .)
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! POR             [ reduce using rule 40 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 91

    (41) expression -> expression MENOS expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 41 (expression -> expression MENOS expression .)
    MAS             reduce using rule 41 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 41 (expression -> expression MENOS expression .)
    MAYOR           reduce using rule 41 (expression -> expression MENOS expression .)
    MENOR           reduce using rule 41 (expression -> expression MENOS expression .)
    MAYORIG         reduce using rule 41 (expression -> expression MENOS expression .)
    MENORIG         reduce using rule 41 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 41 (expression -> expression MENOS expression .)
    DIF             reduce using rule 41 (expression -> expression MENOS expression .)
    AND             reduce using rule 41 (expression -> expression MENOS expression .)
    OR              reduce using rule 41 (expression -> expression MENOS expression .)
    TERN            reduce using rule 41 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 41 (expression -> expression MENOS expression .)
    COMA            reduce using rule 41 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 41 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 41 (expression -> expression MENOS expression .)
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! POR             [ reduce using rule 41 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 92

    (42) expression -> expression POR expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 42 (expression -> expression POR expression .)
    MAS             reduce using rule 42 (expression -> expression POR expression .)
    MENOS           reduce using rule 42 (expression -> expression POR expression .)
    POR             reduce using rule 42 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 42 (expression -> expression POR expression .)
    MAYOR           reduce using rule 42 (expression -> expression POR expression .)
    MENOR           reduce using rule 42 (expression -> expression POR expression .)
    MAYORIG         reduce using rule 42 (expression -> expression POR expression .)
    MENORIG         reduce using rule 42 (expression -> expression POR expression .)
    IGIG            reduce using rule 42 (expression -> expression POR expression .)
    DIF             reduce using rule 42 (expression -> expression POR expression .)
    AND             reduce using rule 42 (expression -> expression POR expression .)
    OR              reduce using rule 42 (expression -> expression POR expression .)
    TERN            reduce using rule 42 (expression -> expression POR expression .)
    PARDER          reduce using rule 42 (expression -> expression POR expression .)
    COMA            reduce using rule 42 (expression -> expression POR expression .)
    CORDER          reduce using rule 42 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 42 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! POR             [ shift and go to state 56 ]
  ! DIVIDIDO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 93

    (43) expression -> expression DIVIDIDO expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MAYOR           reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MENOR           reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MAYORIG         reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    MENORIG         reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    TERN            reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 43 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 43 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! POR             [ shift and go to state 56 ]
  ! DIVIDIDO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 94

    (44) expression -> expression MAYOR expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 44 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 44 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 44 (expression -> expression MAYOR expression .)
    IGIG            reduce using rule 44 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 44 (expression -> expression MAYOR expression .)
    AND             reduce using rule 44 (expression -> expression MAYOR expression .)
    OR              reduce using rule 44 (expression -> expression MAYOR expression .)
    TERN            reduce using rule 44 (expression -> expression MAYOR expression .)
    PARDER          reduce using rule 44 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 44 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 44 (expression -> expression MAYOR expression .)
    DOSPTS          reduce using rule 44 (expression -> expression MAYOR expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61

  ! MAS             [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! MENOS           [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! POR             [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! MAYORIG         [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! MENORIG         [ reduce using rule 44 (expression -> expression MAYOR expression .) ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 95

    (45) expression -> expression MENOR expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 45 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 45 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 45 (expression -> expression MENOR expression .)
    IGIG            reduce using rule 45 (expression -> expression MENOR expression .)
    DIF             reduce using rule 45 (expression -> expression MENOR expression .)
    AND             reduce using rule 45 (expression -> expression MENOR expression .)
    OR              reduce using rule 45 (expression -> expression MENOR expression .)
    TERN            reduce using rule 45 (expression -> expression MENOR expression .)
    PARDER          reduce using rule 45 (expression -> expression MENOR expression .)
    COMA            reduce using rule 45 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 45 (expression -> expression MENOR expression .)
    DOSPTS          reduce using rule 45 (expression -> expression MENOR expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61

  ! MAS             [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! MENOS           [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! POR             [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! MAYORIG         [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! MENORIG         [ reduce using rule 45 (expression -> expression MENOR expression .) ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 96

    (46) expression -> expression MAYORIG expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 46 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 46 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 46 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 46 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 46 (expression -> expression MAYORIG expression .)
    IGIG            reduce using rule 46 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 46 (expression -> expression MAYORIG expression .)
    AND             reduce using rule 46 (expression -> expression MAYORIG expression .)
    OR              reduce using rule 46 (expression -> expression MAYORIG expression .)
    TERN            reduce using rule 46 (expression -> expression MAYORIG expression .)
    PARDER          reduce using rule 46 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 46 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 46 (expression -> expression MAYORIG expression .)
    DOSPTS          reduce using rule 46 (expression -> expression MAYORIG expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! MAS             [ reduce using rule 46 (expression -> expression MAYORIG expression .) ]
  ! MENOS           [ reduce using rule 46 (expression -> expression MAYORIG expression .) ]
  ! POR             [ reduce using rule 46 (expression -> expression MAYORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expression -> expression MAYORIG expression .) ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 97

    (47) expression -> expression MENORIG expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 47 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 47 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 47 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 47 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 47 (expression -> expression MENORIG expression .)
    IGIG            reduce using rule 47 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 47 (expression -> expression MENORIG expression .)
    AND             reduce using rule 47 (expression -> expression MENORIG expression .)
    OR              reduce using rule 47 (expression -> expression MENORIG expression .)
    TERN            reduce using rule 47 (expression -> expression MENORIG expression .)
    PARDER          reduce using rule 47 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 47 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 47 (expression -> expression MENORIG expression .)
    DOSPTS          reduce using rule 47 (expression -> expression MENORIG expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! MAS             [ reduce using rule 47 (expression -> expression MENORIG expression .) ]
  ! MENOS           [ reduce using rule 47 (expression -> expression MENORIG expression .) ]
  ! POR             [ reduce using rule 47 (expression -> expression MENORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expression -> expression MENORIG expression .) ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIG         [ shift and go to state 60 ]
  ! MENORIG         [ shift and go to state 61 ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 98

    (48) expression -> expression IGIG expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 48 (expression -> expression IGIG expression .)
    PARDER          reduce using rule 48 (expression -> expression IGIG expression .)
    COMA            reduce using rule 48 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 48 (expression -> expression IGIG expression .)
    DOSPTS          reduce using rule 48 (expression -> expression IGIG expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66

  ! MAS             [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! MAYOR           [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! MENOR           [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! MAYORIG         [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! MENORIG         [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! IGIG            [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! DIF             [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression IGIG expression .) ]
  ! TERN            [ reduce using rule 48 (expression -> expression IGIG expression .) ]


state 99

    (49) expression -> expression DIF expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 49 (expression -> expression DIF expression .)
    PARDER          reduce using rule 49 (expression -> expression DIF expression .)
    COMA            reduce using rule 49 (expression -> expression DIF expression .)
    CORDER          reduce using rule 49 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 49 (expression -> expression DIF expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66

  ! MAS             [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! IGIG            [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression DIF expression .) ]
  ! TERN            [ reduce using rule 49 (expression -> expression DIF expression .) ]


state 100

    (50) expression -> expression AND expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 50 (expression -> expression AND expression .)
    IGIG            reduce using rule 50 (expression -> expression AND expression .)
    DIF             reduce using rule 50 (expression -> expression AND expression .)
    AND             reduce using rule 50 (expression -> expression AND expression .)
    OR              reduce using rule 50 (expression -> expression AND expression .)
    TERN            reduce using rule 50 (expression -> expression AND expression .)
    PARDER          reduce using rule 50 (expression -> expression AND expression .)
    COMA            reduce using rule 50 (expression -> expression AND expression .)
    CORDER          reduce using rule 50 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 50 (expression -> expression AND expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61

  ! MAS             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MAYORIG         [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MENORIG         [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 101

    (51) expression -> expression OR expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 51 (expression -> expression OR expression .)
    IGIG            reduce using rule 51 (expression -> expression OR expression .)
    DIF             reduce using rule 51 (expression -> expression OR expression .)
    OR              reduce using rule 51 (expression -> expression OR expression .)
    TERN            reduce using rule 51 (expression -> expression OR expression .)
    PARDER          reduce using rule 51 (expression -> expression OR expression .)
    COMA            reduce using rule 51 (expression -> expression OR expression .)
    CORDER          reduce using rule 51 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 51 (expression -> expression OR expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    AND             shift and go to state 64

  ! MAS             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MAYORIG         [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MENORIG         [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! IGIG            [ shift and go to state 62 ]
  ! DIF             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 65 ]
  ! TERN            [ shift and go to state 66 ]


state 102

    (54) expression -> expression TERN expression . DOSPTS expression
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 121
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 103

    (53) expression -> PARIZQ expression PARDER .

    PYC             reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    TERN            reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 53 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 53 (expression -> PARIZQ expression PARDER .)


state 104

    (61) listArray -> listArray CORIZQ expression . CORDER
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 122
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 105

    (62) listArray -> listArray PUNTO ID .

    CORIZQ          reduce using rule 62 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 62 (listArray -> listArray PUNTO ID .)
    PYC             reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 62 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 62 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MAYOR           reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MENOR           reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MAYORIG         reduce using rule 62 (listArray -> listArray PUNTO ID .)
    MENORIG         reduce using rule 62 (listArray -> listArray PUNTO ID .)
    IGIG            reduce using rule 62 (listArray -> listArray PUNTO ID .)
    DIF             reduce using rule 62 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 62 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 62 (listArray -> listArray PUNTO ID .)
    TERN            reduce using rule 62 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 62 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 62 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 62 (listArray -> listArray PUNTO ID .)
    DOSPTS          reduce using rule 62 (listArray -> listArray PUNTO ID .)


state 106

    (58) expression -> CORIZQ expressionList CORDER .

    PYC             reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    IGIG            reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    PARDER          reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)
    DOSPTS          reduce using rule 58 (expression -> CORIZQ expressionList CORDER .)


state 107

    (59) expression -> ID PARIZQ expressionList . PARDER
    (38) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 123
    COMA            shift and go to state 83


state 108

    (60) expression -> ID PARIZQ PARDER .

    PYC             reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MAYORIG         reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    MENORIG         reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    TERN            reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 60 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 60 (expression -> ID PARIZQ PARDER .)


state 109

    (15) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (38) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 124
    COMA            shift and go to state 83


state 110

    (16) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    block                          shift and go to state 125
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 111

    (17) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    block                          shift and go to state 126
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 112

    (18) declaration -> VAR ID DOSPTS type IG . expression PYC
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 127
    listArray                      shift and go to state 40

state 113

    (19) arraydeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IG expression PYC

    CORDER          shift and go to state 128


state 114

    (23) call -> ID PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 23 (call -> ID PARIZQ expressionList PARDER PYC .)


state 115

    (38) expressionList -> expressionList COMA expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 38 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 38 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 38 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 116

    (25) functionstmt -> FUNC ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    block                          shift and go to state 129
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 117

    (30) functype -> DOSPTS type .

    LLAVEIZQ        reduce using rule 30 (functype -> DOSPTS type .)


state 118

    (26) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 26 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 26 (funcparams -> PARIZQ paramsList PARDER .)


state 119

    (28) paramsList -> paramsList COMA . ID DOSPTS type

    ID              shift and go to state 130


state 120

    (29) paramsList -> ID DOSPTS . type
    (34) type -> . NUMBER
    (35) type -> . FLOAT
    (36) type -> . STRING
    (37) type -> . BOOL

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    BOOL            shift and go to state 80

    type                           shift and go to state 131

state 121

    (54) expression -> expression TERN expression DOSPTS . expression
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 132
    listArray                      shift and go to state 40

state 122

    (61) listArray -> listArray CORIZQ expression CORDER .

    CORIZQ          reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    PUNTO           reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    PYC             reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MAS             reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MENOS           reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    POR             reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MAYOR           reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MENOR           reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    MENORIG         reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    IGIG            reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    DIF             reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    AND             reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    OR              reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    TERN            reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    PARDER          reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    COMA            reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    CORDER          reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 61 (listArray -> listArray CORIZQ expression CORDER .)


state 123

    (59) expression -> ID PARIZQ expressionList PARDER .

    PYC             reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MAYOR           reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MENOR           reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MAYORIG         reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    MENORIG         reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    IGIG            reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    PARDER          reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 59 (expression -> ID PARIZQ expressionList PARDER .)


state 124

    (15) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 133


state 125

    (16) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    LLAVEDER        shift and go to state 134
    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    instruccion                    shift and go to state 24
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 126

    (17) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    LLAVEDER        shift and go to state 135
    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    instruccion                    shift and go to state 24
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 127

    (18) declaration -> VAR ID DOSPTS type IG expression . PYC
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 136
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 128

    (19) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IG expression PYC

    IG              shift and go to state 137


state 129

    (25) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (16) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (18) declaration -> . VAR ID DOSPTS type IG expression PYC
    (19) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (20) assignment -> . ID IG expression PYC
    (32) breakstmt -> . BREAK PYC
    (33) continuestmt -> . CONTINUE PYC
    (25) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (23) call -> . ID PARIZQ expressionList PARDER PYC
    (24) call -> . ID PARIZQ PARDER PYC
    (21) returnstmt -> . RETURN expression PYC
    (22) returnstmt -> . RETURN PYC

    LLAVEDER        shift and go to state 138
    CONSOLE         shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    VAR             shift and go to state 18
    ID              shift and go to state 19
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    FUNC            shift and go to state 22
    RETURN          shift and go to state 23

    instruccion                    shift and go to state 24
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14

state 130

    (28) paramsList -> paramsList COMA ID . DOSPTS type

    DOSPTS          shift and go to state 139


state 131

    (29) paramsList -> ID DOSPTS type .

    PARDER          reduce using rule 29 (paramsList -> ID DOSPTS type .)
    COMA            reduce using rule 29 (paramsList -> ID DOSPTS type .)


state 132

    (54) expression -> expression TERN expression DOSPTS expression .
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .)
    PARDER          reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .)
    COMA            reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .)
    CORDER          reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .)
    DOSPTS          reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66

  ! MAS             [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOS           [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! POR             [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYOR           [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOR           [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYORIG         [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENORIG         [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! IGIG            [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIF             [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]
  ! TERN            [ reduce using rule 54 (expression -> expression TERN expression DOSPTS expression .) ]


state 133

    (15) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 15 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 134

    (16) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 16 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 135

    (17) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 17 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 136

    (18) declaration -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FUNC            reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    RETURN          reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 18 (declaration -> VAR ID DOSPTS type IG expression PYC .)


state 137

    (19) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG . expression PYC
    (40) expression -> . expression MAS expression
    (41) expression -> . expression MENOS expression
    (42) expression -> . expression POR expression
    (43) expression -> . expression DIVIDIDO expression
    (44) expression -> . expression MAYOR expression
    (45) expression -> . expression MENOR expression
    (46) expression -> . expression MAYORIG expression
    (47) expression -> . expression MENORIG expression
    (48) expression -> . expression IGIG expression
    (49) expression -> . expression DIF expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . NOT expression
    (53) expression -> . PARIZQ expression PARDER
    (54) expression -> . expression TERN expression DOSPTS expression
    (55) expression -> . ENTERO
    (56) expression -> . CADENA
    (57) expression -> . listArray
    (58) expression -> . CORIZQ expressionList CORDER
    (59) expression -> . ID PARIZQ expressionList PARDER
    (60) expression -> . ID PARIZQ PARDER
    (61) listArray -> . listArray CORIZQ expression CORDER
    (62) listArray -> . listArray PUNTO ID
    (63) listArray -> . ID

    NOT             shift and go to state 36
    PARIZQ          shift and go to state 37
    ENTERO          shift and go to state 38
    CADENA          shift and go to state 39
    CORIZQ          shift and go to state 41
    ID              shift and go to state 42

    expression                     shift and go to state 140
    listArray                      shift and go to state 40

state 138

    (25) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 25 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 139

    (28) paramsList -> paramsList COMA ID DOSPTS . type
    (34) type -> . NUMBER
    (35) type -> . FLOAT
    (36) type -> . STRING
    (37) type -> . BOOL

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    BOOL            shift and go to state 80

    type                           shift and go to state 141

state 140

    (19) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression . PYC
    (40) expression -> expression . MAS expression
    (41) expression -> expression . MENOS expression
    (42) expression -> expression . POR expression
    (43) expression -> expression . DIVIDIDO expression
    (44) expression -> expression . MAYOR expression
    (45) expression -> expression . MENOR expression
    (46) expression -> expression . MAYORIG expression
    (47) expression -> expression . MENORIG expression
    (48) expression -> expression . IGIG expression
    (49) expression -> expression . DIF expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (54) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 142
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIG         shift and go to state 60
    MENORIG         shift and go to state 61
    IGIG            shift and go to state 62
    DIF             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    TERN            shift and go to state 66


state 141

    (28) paramsList -> paramsList COMA ID DOSPTS type .

    PARDER          reduce using rule 28 (paramsList -> paramsList COMA ID DOSPTS type .)
    COMA            reduce using rule 28 (paramsList -> paramsList COMA ID DOSPTS type .)


state 142

    (19) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .

    CONSOLE         reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    IF              reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    WHILE           reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    VAR             reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    ID              reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    BREAK           reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    CONTINUE        reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    FUNC            reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    RETURN          reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    $end            reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    LLAVEDER        reduce using rule 19 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 67 resolved as shift
WARNING: shift/reduce conflict for POR in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 67 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 67 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 67 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 67 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 67 resolved as shift
WARNING: shift/reduce conflict for DIF in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for TERN in state 67 resolved as shift
WARNING: shift/reduce conflict for MAS in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 98 resolved as shift
WARNING: shift/reduce conflict for POR in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 98 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 98 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 98 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 98 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 98 resolved as shift
WARNING: shift/reduce conflict for DIF in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for TERN in state 98 resolved as shift
WARNING: shift/reduce conflict for MAS in state 99 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 99 resolved as shift
WARNING: shift/reduce conflict for POR in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 99 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 99 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 99 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 99 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 99 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 99 resolved as shift
WARNING: shift/reduce conflict for DIF in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for TERN in state 99 resolved as shift
WARNING: shift/reduce conflict for MAS in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 132 resolved as shift
WARNING: shift/reduce conflict for POR in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 132 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 132 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 132 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 132 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 132 resolved as shift
WARNING: shift/reduce conflict for DIF in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for TERN in state 132 resolved as shift
