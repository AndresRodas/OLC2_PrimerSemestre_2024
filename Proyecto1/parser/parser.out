Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECIMAL
    RETURN

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> whileinstruction
Rule 7     instruccion -> declaration
Rule 8     instruccion -> arraydeclaration
Rule 9     instruccion -> assignment
Rule 10    instruccion -> breakstmt
Rule 11    instruccion -> continuestmt
Rule 12    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 13    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 14    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 15    declaration -> VAR ID DOSPTS type IG expression PYC
Rule 16    arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
Rule 17    assignment -> ID IG expression PYC
Rule 18    breakstmt -> BREAK PYC
Rule 19    continuestmt -> CONTINUE PYC
Rule 20    type -> NUMBER
Rule 21    type -> FLOAT
Rule 22    type -> STRING
Rule 23    type -> BOOL
Rule 24    expressionList -> expressionList COMA expression
Rule 25    expressionList -> expression
Rule 26    expression -> expression MAS expression
Rule 27    expression -> expression MENOS expression
Rule 28    expression -> expression POR expression
Rule 29    expression -> expression DIVIDIDO expression
Rule 30    expression -> expression MAYOR expression
Rule 31    expression -> expression MENOR expression
Rule 32    expression -> expression MAYORIG expression
Rule 33    expression -> expression MENORIG expression
Rule 34    expression -> expression IGIG expression
Rule 35    expression -> expression DIF expression
Rule 36    expression -> expression AND expression
Rule 37    expression -> expression OR expression
Rule 38    expression -> NOT expression
Rule 39    expression -> PARIZQ expression PARDER
Rule 40    expression -> ENTERO
Rule 41    expression -> CADENA
Rule 42    expression -> listArray
Rule 43    expression -> CORIZQ expressionList CORDER
Rule 44    listArray -> listArray CORIZQ expression CORDER
Rule 45    listArray -> listArray PUNTO ID
Rule 46    listArray -> ID

Terminals, with rules where they appear

AND                  : 36
BOOL                 : 23
BREAK                : 18
CADENA               : 41
COMA                 : 24
CONSOLE              : 12
CONTINUE             : 19
CORDER               : 16 43 44
CORIZQ               : 16 43 44
DECIMAL              : 
DIF                  : 35
DIVIDIDO             : 29
DOSPTS               : 15 16
ENTERO               : 40
FLOAT                : 21
ID                   : 15 16 17 45 46
IF                   : 13
IG                   : 15 16 17
IGIG                 : 34
LLAVEDER             : 13 14
LLAVEIZQ             : 13 14
LOG                  : 12
MAS                  : 26
MAYOR                : 30
MAYORIG              : 32
MENOR                : 31
MENORIG              : 33
MENOS                : 27
NOT                  : 38
NUMBER               : 20
OR                   : 37
PARDER               : 12 13 14 39
PARIZQ               : 12 13 14 39
POR                  : 28
PUNTO                : 12 45
PYC                  : 12 15 16 17 18 19
RETURN               : 
STRING               : 22
VAR                  : 15 16
WHILE                : 14
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 8
assignment           : 9
block                : 1 2 13 14
breakstmt            : 10
continuestmt         : 11
declaration          : 7
expression           : 13 14 15 16 17 24 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 44
expressionList       : 12 24 43
ifinstruction        : 5
instruccion          : 2 3
listArray            : 42 44 45
print                : 4
s                    : 0
type                 : 15 16
whileinstruction     : 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    instruccion                    shift and go to state 19
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> whileinstruction .)
    IF              reduce using rule 6 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 6 (instruccion -> whileinstruction .)
    VAR             reduce using rule 6 (instruccion -> whileinstruction .)
    ID              reduce using rule 6 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 6 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> whileinstruction .)
    $end            reduce using rule 6 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> whileinstruction .)


state 7

    (7) instruccion -> declaration .

    CONSOLE         reduce using rule 7 (instruccion -> declaration .)
    IF              reduce using rule 7 (instruccion -> declaration .)
    WHILE           reduce using rule 7 (instruccion -> declaration .)
    VAR             reduce using rule 7 (instruccion -> declaration .)
    ID              reduce using rule 7 (instruccion -> declaration .)
    BREAK           reduce using rule 7 (instruccion -> declaration .)
    CONTINUE        reduce using rule 7 (instruccion -> declaration .)
    $end            reduce using rule 7 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 7 (instruccion -> declaration .)


state 8

    (8) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 8 (instruccion -> arraydeclaration .)
    IF              reduce using rule 8 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 8 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 8 (instruccion -> arraydeclaration .)
    ID              reduce using rule 8 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 8 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 8 (instruccion -> arraydeclaration .)
    $end            reduce using rule 8 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 8 (instruccion -> arraydeclaration .)


state 9

    (9) instruccion -> assignment .

    CONSOLE         reduce using rule 9 (instruccion -> assignment .)
    IF              reduce using rule 9 (instruccion -> assignment .)
    WHILE           reduce using rule 9 (instruccion -> assignment .)
    VAR             reduce using rule 9 (instruccion -> assignment .)
    ID              reduce using rule 9 (instruccion -> assignment .)
    BREAK           reduce using rule 9 (instruccion -> assignment .)
    CONTINUE        reduce using rule 9 (instruccion -> assignment .)
    $end            reduce using rule 9 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 9 (instruccion -> assignment .)


state 10

    (10) instruccion -> breakstmt .

    CONSOLE         reduce using rule 10 (instruccion -> breakstmt .)
    IF              reduce using rule 10 (instruccion -> breakstmt .)
    WHILE           reduce using rule 10 (instruccion -> breakstmt .)
    VAR             reduce using rule 10 (instruccion -> breakstmt .)
    ID              reduce using rule 10 (instruccion -> breakstmt .)
    BREAK           reduce using rule 10 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 10 (instruccion -> breakstmt .)
    $end            reduce using rule 10 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 10 (instruccion -> breakstmt .)


state 11

    (11) instruccion -> continuestmt .

    CONSOLE         reduce using rule 11 (instruccion -> continuestmt .)
    IF              reduce using rule 11 (instruccion -> continuestmt .)
    WHILE           reduce using rule 11 (instruccion -> continuestmt .)
    VAR             reduce using rule 11 (instruccion -> continuestmt .)
    ID              reduce using rule 11 (instruccion -> continuestmt .)
    BREAK           reduce using rule 11 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 11 (instruccion -> continuestmt .)
    $end            reduce using rule 11 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 11 (instruccion -> continuestmt .)


state 12

    (12) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 20


state 13

    (13) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 21


state 14

    (14) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 22


state 15

    (15) declaration -> VAR . ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IG expression PYC

    ID              shift and go to state 23


state 16

    (17) assignment -> ID . IG expression PYC

    IG              shift and go to state 24


state 17

    (18) breakstmt -> BREAK . PYC

    PYC             shift and go to state 25


state 18

    (19) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 26


state 19

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)


state 20

    (12) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 27


state 21

    (13) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 29
    listArray                      shift and go to state 33

state 22

    (14) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 36
    listArray                      shift and go to state 33

state 23

    (15) declaration -> VAR ID . DOSPTS type IG expression PYC
    (16) arraydeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IG expression PYC

    DOSPTS          shift and go to state 37


state 24

    (17) assignment -> ID IG . expression PYC
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 38
    listArray                      shift and go to state 33

state 25

    (18) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 18 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 18 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 18 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 18 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 18 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 18 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 18 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 18 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 18 (breakstmt -> BREAK PYC .)


state 26

    (19) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 19 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 19 (continuestmt -> CONTINUE PYC .)


state 27

    (12) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 39


state 28

    (39) expression -> PARIZQ . expression PARDER
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 40
    listArray                      shift and go to state 33

state 29

    (13) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          shift and go to state 41
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 30

    (38) expression -> NOT . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 54
    listArray                      shift and go to state 33

state 31

    (40) expression -> ENTERO .

    PARDER          reduce using rule 40 (expression -> ENTERO .)
    MAS             reduce using rule 40 (expression -> ENTERO .)
    MENOS           reduce using rule 40 (expression -> ENTERO .)
    POR             reduce using rule 40 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 40 (expression -> ENTERO .)
    MAYOR           reduce using rule 40 (expression -> ENTERO .)
    MENOR           reduce using rule 40 (expression -> ENTERO .)
    MAYORIG         reduce using rule 40 (expression -> ENTERO .)
    MENORIG         reduce using rule 40 (expression -> ENTERO .)
    IGIG            reduce using rule 40 (expression -> ENTERO .)
    DIF             reduce using rule 40 (expression -> ENTERO .)
    AND             reduce using rule 40 (expression -> ENTERO .)
    OR              reduce using rule 40 (expression -> ENTERO .)
    PYC             reduce using rule 40 (expression -> ENTERO .)
    CORDER          reduce using rule 40 (expression -> ENTERO .)
    COMA            reduce using rule 40 (expression -> ENTERO .)


state 32

    (41) expression -> CADENA .

    PARDER          reduce using rule 41 (expression -> CADENA .)
    MAS             reduce using rule 41 (expression -> CADENA .)
    MENOS           reduce using rule 41 (expression -> CADENA .)
    POR             reduce using rule 41 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 41 (expression -> CADENA .)
    MAYOR           reduce using rule 41 (expression -> CADENA .)
    MENOR           reduce using rule 41 (expression -> CADENA .)
    MAYORIG         reduce using rule 41 (expression -> CADENA .)
    MENORIG         reduce using rule 41 (expression -> CADENA .)
    IGIG            reduce using rule 41 (expression -> CADENA .)
    DIF             reduce using rule 41 (expression -> CADENA .)
    AND             reduce using rule 41 (expression -> CADENA .)
    OR              reduce using rule 41 (expression -> CADENA .)
    PYC             reduce using rule 41 (expression -> CADENA .)
    CORDER          reduce using rule 41 (expression -> CADENA .)
    COMA            reduce using rule 41 (expression -> CADENA .)


state 33

    (42) expression -> listArray .
    (44) listArray -> listArray . CORIZQ expression CORDER
    (45) listArray -> listArray . PUNTO ID

    PARDER          reduce using rule 42 (expression -> listArray .)
    MAS             reduce using rule 42 (expression -> listArray .)
    MENOS           reduce using rule 42 (expression -> listArray .)
    POR             reduce using rule 42 (expression -> listArray .)
    DIVIDIDO        reduce using rule 42 (expression -> listArray .)
    MAYOR           reduce using rule 42 (expression -> listArray .)
    MENOR           reduce using rule 42 (expression -> listArray .)
    MAYORIG         reduce using rule 42 (expression -> listArray .)
    MENORIG         reduce using rule 42 (expression -> listArray .)
    IGIG            reduce using rule 42 (expression -> listArray .)
    DIF             reduce using rule 42 (expression -> listArray .)
    AND             reduce using rule 42 (expression -> listArray .)
    OR              reduce using rule 42 (expression -> listArray .)
    PYC             reduce using rule 42 (expression -> listArray .)
    CORDER          reduce using rule 42 (expression -> listArray .)
    COMA            reduce using rule 42 (expression -> listArray .)
    CORIZQ          shift and go to state 55
    PUNTO           shift and go to state 56


state 34

    (43) expression -> CORIZQ . expressionList CORDER
    (24) expressionList -> . expressionList COMA expression
    (25) expressionList -> . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expressionList                 shift and go to state 57
    expression                     shift and go to state 58
    listArray                      shift and go to state 33

state 35

    (46) listArray -> ID .

    CORIZQ          reduce using rule 46 (listArray -> ID .)
    PUNTO           reduce using rule 46 (listArray -> ID .)
    PARDER          reduce using rule 46 (listArray -> ID .)
    MAS             reduce using rule 46 (listArray -> ID .)
    MENOS           reduce using rule 46 (listArray -> ID .)
    POR             reduce using rule 46 (listArray -> ID .)
    DIVIDIDO        reduce using rule 46 (listArray -> ID .)
    MAYOR           reduce using rule 46 (listArray -> ID .)
    MENOR           reduce using rule 46 (listArray -> ID .)
    MAYORIG         reduce using rule 46 (listArray -> ID .)
    MENORIG         reduce using rule 46 (listArray -> ID .)
    IGIG            reduce using rule 46 (listArray -> ID .)
    DIF             reduce using rule 46 (listArray -> ID .)
    AND             reduce using rule 46 (listArray -> ID .)
    OR              reduce using rule 46 (listArray -> ID .)
    PYC             reduce using rule 46 (listArray -> ID .)
    CORDER          reduce using rule 46 (listArray -> ID .)
    COMA            reduce using rule 46 (listArray -> ID .)


state 36

    (14) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          shift and go to state 59
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 37

    (15) declaration -> VAR ID DOSPTS . type IG expression PYC
    (16) arraydeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IG expression PYC
    (20) type -> . NUMBER
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOL

    NUMBER          shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63
    BOOL            shift and go to state 64

    type                           shift and go to state 60

state 38

    (17) assignment -> ID IG expression . PYC
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PYC             shift and go to state 65
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 39

    (12) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (24) expressionList -> . expressionList COMA expression
    (25) expressionList -> . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expressionList                 shift and go to state 66
    expression                     shift and go to state 58
    listArray                      shift and go to state 33

state 40

    (39) expression -> PARIZQ expression . PARDER
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          shift and go to state 67
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 41

    (13) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 68


state 42

    (26) expression -> expression MAS . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 69
    listArray                      shift and go to state 33

state 43

    (27) expression -> expression MENOS . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 70
    listArray                      shift and go to state 33

state 44

    (28) expression -> expression POR . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 71
    listArray                      shift and go to state 33

state 45

    (29) expression -> expression DIVIDIDO . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 72
    listArray                      shift and go to state 33

state 46

    (30) expression -> expression MAYOR . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 73
    listArray                      shift and go to state 33

state 47

    (31) expression -> expression MENOR . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 74
    listArray                      shift and go to state 33

state 48

    (32) expression -> expression MAYORIG . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 75
    listArray                      shift and go to state 33

state 49

    (33) expression -> expression MENORIG . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 76
    listArray                      shift and go to state 33

state 50

    (34) expression -> expression IGIG . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 77
    listArray                      shift and go to state 33

state 51

    (35) expression -> expression DIF . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 78
    listArray                      shift and go to state 33

state 52

    (36) expression -> expression AND . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 79
    listArray                      shift and go to state 33

state 53

    (37) expression -> expression OR . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 80
    listArray                      shift and go to state 33

state 54

    (38) expression -> NOT expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PARDER          reduce using rule 38 (expression -> NOT expression .)
    PYC             reduce using rule 38 (expression -> NOT expression .)
    CORDER          reduce using rule 38 (expression -> NOT expression .)
    COMA            reduce using rule 38 (expression -> NOT expression .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAS             [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MENOS           [ reduce using rule 38 (expression -> NOT expression .) ]
  ! POR             [ reduce using rule 38 (expression -> NOT expression .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MAYORIG         [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MENORIG         [ reduce using rule 38 (expression -> NOT expression .) ]
  ! IGIG            [ reduce using rule 38 (expression -> NOT expression .) ]
  ! DIF             [ reduce using rule 38 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 38 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 38 (expression -> NOT expression .) ]


state 55

    (44) listArray -> listArray CORIZQ . expression CORDER
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    listArray                      shift and go to state 33
    expression                     shift and go to state 81

state 56

    (45) listArray -> listArray PUNTO . ID

    ID              shift and go to state 82


state 57

    (43) expression -> CORIZQ expressionList . CORDER
    (24) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 83
    COMA            shift and go to state 84


state 58

    (25) expressionList -> expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    CORDER          reduce using rule 25 (expressionList -> expression .)
    COMA            reduce using rule 25 (expressionList -> expression .)
    PARDER          reduce using rule 25 (expressionList -> expression .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 59

    (14) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 85


state 60

    (15) declaration -> VAR ID DOSPTS type . IG expression PYC
    (16) arraydeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IG expression PYC

    IG              shift and go to state 86
    CORIZQ          shift and go to state 87


state 61

    (20) type -> NUMBER .

    IG              reduce using rule 20 (type -> NUMBER .)
    CORIZQ          reduce using rule 20 (type -> NUMBER .)


state 62

    (21) type -> FLOAT .

    IG              reduce using rule 21 (type -> FLOAT .)
    CORIZQ          reduce using rule 21 (type -> FLOAT .)


state 63

    (22) type -> STRING .

    IG              reduce using rule 22 (type -> STRING .)
    CORIZQ          reduce using rule 22 (type -> STRING .)


state 64

    (23) type -> BOOL .

    IG              reduce using rule 23 (type -> BOOL .)
    CORIZQ          reduce using rule 23 (type -> BOOL .)


state 65

    (17) assignment -> ID IG expression PYC .

    CONSOLE         reduce using rule 17 (assignment -> ID IG expression PYC .)
    IF              reduce using rule 17 (assignment -> ID IG expression PYC .)
    WHILE           reduce using rule 17 (assignment -> ID IG expression PYC .)
    VAR             reduce using rule 17 (assignment -> ID IG expression PYC .)
    ID              reduce using rule 17 (assignment -> ID IG expression PYC .)
    BREAK           reduce using rule 17 (assignment -> ID IG expression PYC .)
    CONTINUE        reduce using rule 17 (assignment -> ID IG expression PYC .)
    $end            reduce using rule 17 (assignment -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 17 (assignment -> ID IG expression PYC .)


state 66

    (12) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (24) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 88
    COMA            shift and go to state 84


state 67

    (39) expression -> PARIZQ expression PARDER .

    PARDER          reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    PYC             reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 39 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 39 (expression -> PARIZQ expression PARDER .)


state 68

    (13) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    block                          shift and go to state 89
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 69

    (26) expression -> expression MAS expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 26 (expression -> expression MAS expression .)
    MAS             reduce using rule 26 (expression -> expression MAS expression .)
    MENOS           reduce using rule 26 (expression -> expression MAS expression .)
    IGIG            reduce using rule 26 (expression -> expression MAS expression .)
    DIF             reduce using rule 26 (expression -> expression MAS expression .)
    PYC             reduce using rule 26 (expression -> expression MAS expression .)
    CORDER          reduce using rule 26 (expression -> expression MAS expression .)
    COMA            reduce using rule 26 (expression -> expression MAS expression .)
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! POR             [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! MAYOR           [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! MENOR           [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! MAYORIG         [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! MENORIG         [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! OR              [ reduce using rule 26 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 70

    (27) expression -> expression MENOS expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 27 (expression -> expression MENOS expression .)
    MAS             reduce using rule 27 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 27 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 27 (expression -> expression MENOS expression .)
    DIF             reduce using rule 27 (expression -> expression MENOS expression .)
    PYC             reduce using rule 27 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 27 (expression -> expression MENOS expression .)
    COMA            reduce using rule 27 (expression -> expression MENOS expression .)
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! POR             [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! MAYOR           [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! MENOR           [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! MAYORIG         [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! MENORIG         [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 71

    (28) expression -> expression POR expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 28 (expression -> expression POR expression .)
    MAS             reduce using rule 28 (expression -> expression POR expression .)
    MENOS           reduce using rule 28 (expression -> expression POR expression .)
    POR             reduce using rule 28 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 28 (expression -> expression POR expression .)
    IGIG            reduce using rule 28 (expression -> expression POR expression .)
    DIF             reduce using rule 28 (expression -> expression POR expression .)
    PYC             reduce using rule 28 (expression -> expression POR expression .)
    CORDER          reduce using rule 28 (expression -> expression POR expression .)
    COMA            reduce using rule 28 (expression -> expression POR expression .)
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAYOR           [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! MENOR           [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! MAYORIG         [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! MENORIG         [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 72

    (29) expression -> expression DIVIDIDO expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    PYC             reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 29 (expression -> expression DIVIDIDO expression .)
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAYOR           [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! MENOR           [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! MAYORIG         [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! MENORIG         [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 73

    (30) expression -> expression MAYOR expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 30 (expression -> expression MAYOR expression .)
    MAS             reduce using rule 30 (expression -> expression MAYOR expression .)
    MENOS           reduce using rule 30 (expression -> expression MAYOR expression .)
    POR             reduce using rule 30 (expression -> expression MAYOR expression .)
    DIVIDIDO        reduce using rule 30 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 30 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 30 (expression -> expression MAYOR expression .)
    IGIG            reduce using rule 30 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 30 (expression -> expression MAYOR expression .)
    PYC             reduce using rule 30 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 30 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 30 (expression -> expression MAYOR expression .)
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAYORIG         [ reduce using rule 30 (expression -> expression MAYOR expression .) ]
  ! MENORIG         [ reduce using rule 30 (expression -> expression MAYOR expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression MAYOR expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression MAYOR expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 74

    (31) expression -> expression MENOR expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 31 (expression -> expression MENOR expression .)
    MAS             reduce using rule 31 (expression -> expression MENOR expression .)
    MENOS           reduce using rule 31 (expression -> expression MENOR expression .)
    POR             reduce using rule 31 (expression -> expression MENOR expression .)
    DIVIDIDO        reduce using rule 31 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 31 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 31 (expression -> expression MENOR expression .)
    IGIG            reduce using rule 31 (expression -> expression MENOR expression .)
    DIF             reduce using rule 31 (expression -> expression MENOR expression .)
    PYC             reduce using rule 31 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 31 (expression -> expression MENOR expression .)
    COMA            reduce using rule 31 (expression -> expression MENOR expression .)
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAYORIG         [ reduce using rule 31 (expression -> expression MENOR expression .) ]
  ! MENORIG         [ reduce using rule 31 (expression -> expression MENOR expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression MENOR expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression MENOR expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 75

    (32) expression -> expression MAYORIG expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 32 (expression -> expression MAYORIG expression .)
    MAS             reduce using rule 32 (expression -> expression MAYORIG expression .)
    MENOS           reduce using rule 32 (expression -> expression MAYORIG expression .)
    POR             reduce using rule 32 (expression -> expression MAYORIG expression .)
    DIVIDIDO        reduce using rule 32 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 32 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 32 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 32 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 32 (expression -> expression MAYORIG expression .)
    IGIG            reduce using rule 32 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 32 (expression -> expression MAYORIG expression .)
    PYC             reduce using rule 32 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 32 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 32 (expression -> expression MAYORIG expression .)
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! AND             [ reduce using rule 32 (expression -> expression MAYORIG expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression MAYORIG expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! MAYORIG         [ shift and go to state 48 ]
  ! MENORIG         [ shift and go to state 49 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 76

    (33) expression -> expression MENORIG expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 33 (expression -> expression MENORIG expression .)
    MAS             reduce using rule 33 (expression -> expression MENORIG expression .)
    MENOS           reduce using rule 33 (expression -> expression MENORIG expression .)
    POR             reduce using rule 33 (expression -> expression MENORIG expression .)
    DIVIDIDO        reduce using rule 33 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 33 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 33 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 33 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 33 (expression -> expression MENORIG expression .)
    IGIG            reduce using rule 33 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 33 (expression -> expression MENORIG expression .)
    PYC             reduce using rule 33 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 33 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 33 (expression -> expression MENORIG expression .)
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! AND             [ reduce using rule 33 (expression -> expression MENORIG expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression MENORIG expression .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! MAYORIG         [ shift and go to state 48 ]
  ! MENORIG         [ shift and go to state 49 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 77

    (34) expression -> expression IGIG expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PARDER          reduce using rule 34 (expression -> expression IGIG expression .)
    PYC             reduce using rule 34 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 34 (expression -> expression IGIG expression .)
    COMA            reduce using rule 34 (expression -> expression IGIG expression .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAS             [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! MAYOR           [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! MENOR           [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! MAYORIG         [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! MENORIG         [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! IGIG            [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! DIF             [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression IGIG expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression IGIG expression .) ]


state 78

    (35) expression -> expression DIF expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PARDER          reduce using rule 35 (expression -> expression DIF expression .)
    PYC             reduce using rule 35 (expression -> expression DIF expression .)
    CORDER          reduce using rule 35 (expression -> expression DIF expression .)
    COMA            reduce using rule 35 (expression -> expression DIF expression .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MAS             [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! IGIG            [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression DIF expression .) ]


state 79

    (36) expression -> expression AND expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 36 (expression -> expression AND expression .)
    MAS             reduce using rule 36 (expression -> expression AND expression .)
    MENOS           reduce using rule 36 (expression -> expression AND expression .)
    POR             reduce using rule 36 (expression -> expression AND expression .)
    DIVIDIDO        reduce using rule 36 (expression -> expression AND expression .)
    MAYOR           reduce using rule 36 (expression -> expression AND expression .)
    MENOR           reduce using rule 36 (expression -> expression AND expression .)
    MAYORIG         reduce using rule 36 (expression -> expression AND expression .)
    MENORIG         reduce using rule 36 (expression -> expression AND expression .)
    IGIG            reduce using rule 36 (expression -> expression AND expression .)
    DIF             reduce using rule 36 (expression -> expression AND expression .)
    AND             reduce using rule 36 (expression -> expression AND expression .)
    OR              reduce using rule 36 (expression -> expression AND expression .)
    PYC             reduce using rule 36 (expression -> expression AND expression .)
    CORDER          reduce using rule 36 (expression -> expression AND expression .)
    COMA            reduce using rule 36 (expression -> expression AND expression .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! MAYORIG         [ shift and go to state 48 ]
  ! MENORIG         [ shift and go to state 49 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 80

    (37) expression -> expression OR expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PARDER          reduce using rule 37 (expression -> expression OR expression .)
    MAS             reduce using rule 37 (expression -> expression OR expression .)
    MENOS           reduce using rule 37 (expression -> expression OR expression .)
    POR             reduce using rule 37 (expression -> expression OR expression .)
    DIVIDIDO        reduce using rule 37 (expression -> expression OR expression .)
    MAYOR           reduce using rule 37 (expression -> expression OR expression .)
    MENOR           reduce using rule 37 (expression -> expression OR expression .)
    MAYORIG         reduce using rule 37 (expression -> expression OR expression .)
    MENORIG         reduce using rule 37 (expression -> expression OR expression .)
    IGIG            reduce using rule 37 (expression -> expression OR expression .)
    DIF             reduce using rule 37 (expression -> expression OR expression .)
    AND             reduce using rule 37 (expression -> expression OR expression .)
    OR              reduce using rule 37 (expression -> expression OR expression .)
    PYC             reduce using rule 37 (expression -> expression OR expression .)
    CORDER          reduce using rule 37 (expression -> expression OR expression .)
    COMA            reduce using rule 37 (expression -> expression OR expression .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENOR           [ shift and go to state 47 ]
  ! MAYORIG         [ shift and go to state 48 ]
  ! MENORIG         [ shift and go to state 49 ]
  ! IGIG            [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 81

    (44) listArray -> listArray CORIZQ expression . CORDER
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    CORDER          shift and go to state 90
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 82

    (45) listArray -> listArray PUNTO ID .

    CORIZQ          reduce using rule 45 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 45 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 45 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 45 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MAYOR           reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MENOR           reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MAYORIG         reduce using rule 45 (listArray -> listArray PUNTO ID .)
    MENORIG         reduce using rule 45 (listArray -> listArray PUNTO ID .)
    IGIG            reduce using rule 45 (listArray -> listArray PUNTO ID .)
    DIF             reduce using rule 45 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 45 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 45 (listArray -> listArray PUNTO ID .)
    PYC             reduce using rule 45 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 45 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 45 (listArray -> listArray PUNTO ID .)


state 83

    (43) expression -> CORIZQ expressionList CORDER .

    PARDER          reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    IGIG            reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    PYC             reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 43 (expression -> CORIZQ expressionList CORDER .)


state 84

    (24) expressionList -> expressionList COMA . expression
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 91
    listArray                      shift and go to state 33

state 85

    (14) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    block                          shift and go to state 92
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 86

    (15) declaration -> VAR ID DOSPTS type IG . expression PYC
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 93
    listArray                      shift and go to state 33

state 87

    (16) arraydeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IG expression PYC

    CORDER          shift and go to state 94


state 88

    (12) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 95


state 89

    (13) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    LLAVEDER        shift and go to state 96
    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    instruccion                    shift and go to state 19
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 90

    (44) listArray -> listArray CORIZQ expression CORDER .

    CORIZQ          reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    PUNTO           reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    PARDER          reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MAS             reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MENOS           reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    POR             reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MAYOR           reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MENOR           reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    MENORIG         reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    IGIG            reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    DIF             reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    AND             reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    OR              reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    PYC             reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    CORDER          reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)
    COMA            reduce using rule 44 (listArray -> listArray CORIZQ expression CORDER .)


state 91

    (24) expressionList -> expressionList COMA expression .
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    CORDER          reduce using rule 24 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 24 (expressionList -> expressionList COMA expression .)
    PARDER          reduce using rule 24 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 92

    (14) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (13) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (14) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (15) declaration -> . VAR ID DOSPTS type IG expression PYC
    (16) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (17) assignment -> . ID IG expression PYC
    (18) breakstmt -> . BREAK PYC
    (19) continuestmt -> . CONTINUE PYC

    LLAVEDER        shift and go to state 97
    CONSOLE         shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    BREAK           shift and go to state 17
    CONTINUE        shift and go to state 18

    instruccion                    shift and go to state 19
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11

state 93

    (15) declaration -> VAR ID DOSPTS type IG expression . PYC
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PYC             shift and go to state 98
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 94

    (16) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IG expression PYC

    IG              shift and go to state 99


state 95

    (12) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 12 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 96

    (13) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 13 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 97

    (14) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 14 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 98

    (15) declaration -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 15 (declaration -> VAR ID DOSPTS type IG expression PYC .)


state 99

    (16) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG . expression PYC
    (26) expression -> . expression MAS expression
    (27) expression -> . expression MENOS expression
    (28) expression -> . expression POR expression
    (29) expression -> . expression DIVIDIDO expression
    (30) expression -> . expression MAYOR expression
    (31) expression -> . expression MENOR expression
    (32) expression -> . expression MAYORIG expression
    (33) expression -> . expression MENORIG expression
    (34) expression -> . expression IGIG expression
    (35) expression -> . expression DIF expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . PARIZQ expression PARDER
    (40) expression -> . ENTERO
    (41) expression -> . CADENA
    (42) expression -> . listArray
    (43) expression -> . CORIZQ expressionList CORDER
    (44) listArray -> . listArray CORIZQ expression CORDER
    (45) listArray -> . listArray PUNTO ID
    (46) listArray -> . ID

    NOT             shift and go to state 30
    PARIZQ          shift and go to state 28
    ENTERO          shift and go to state 31
    CADENA          shift and go to state 32
    CORIZQ          shift and go to state 34
    ID              shift and go to state 35

    expression                     shift and go to state 100
    listArray                      shift and go to state 33

state 100

    (16) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression . PYC
    (26) expression -> expression . MAS expression
    (27) expression -> expression . MENOS expression
    (28) expression -> expression . POR expression
    (29) expression -> expression . DIVIDIDO expression
    (30) expression -> expression . MAYOR expression
    (31) expression -> expression . MENOR expression
    (32) expression -> expression . MAYORIG expression
    (33) expression -> expression . MENORIG expression
    (34) expression -> expression . IGIG expression
    (35) expression -> expression . DIF expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression

    PYC             shift and go to state 101
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYORIG         shift and go to state 48
    MENORIG         shift and go to state 49
    IGIG            shift and go to state 50
    DIF             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 101

    (16) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .

    CONSOLE         reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    IF              reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    WHILE           reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    VAR             reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    ID              reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    BREAK           reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    CONTINUE        reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    $end            reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    LLAVEDER        reduce using rule 16 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 54 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 54 resolved as shift
WARNING: shift/reduce conflict for POR in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 54 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 54 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 54 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 54 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 54 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 54 resolved as shift
WARNING: shift/reduce conflict for DIF in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for MAS in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for POR in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 77 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 77 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 77 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 77 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 77 resolved as shift
WARNING: shift/reduce conflict for DIF in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for MAS in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for POR in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 78 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 78 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 78 resolved as shift
WARNING: shift/reduce conflict for DIF in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
