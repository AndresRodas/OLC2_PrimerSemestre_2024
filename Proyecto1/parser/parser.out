Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECIMAL
    RETURN

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> whileinstruction
Rule 7     instruccion -> declaration
Rule 8     instruccion -> arraydeclaration
Rule 9     instruccion -> assignment
Rule 10    instruccion -> breakstmt
Rule 11    instruccion -> continuestmt
Rule 12    instruccion -> functionstmt
Rule 13    instruccion -> call
Rule 14    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 15    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 16    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 17    declaration -> VAR ID DOSPTS type IG expression PYC
Rule 18    arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
Rule 19    assignment -> ID IG expression PYC
Rule 20    call -> ID PARIZQ expressionList PARDER PYC
Rule 21    call -> ID PARIZQ PARDER PYC
Rule 22    functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 23    funcparams -> PARIZQ paramsList PARDER
Rule 24    funcparams -> PARIZQ PARDER
Rule 25    paramsList -> paramsList COMA ID DOSPTS type
Rule 26    paramsList -> ID DOSPTS type
Rule 27    functype -> DOSPTS type
Rule 28    functype -> <empty>
Rule 29    breakstmt -> BREAK PYC
Rule 30    continuestmt -> CONTINUE PYC
Rule 31    type -> NUMBER
Rule 32    type -> FLOAT
Rule 33    type -> STRING
Rule 34    type -> BOOL
Rule 35    expressionList -> expressionList COMA expression
Rule 36    expressionList -> expression
Rule 37    expression -> expression MAS expression
Rule 38    expression -> expression MENOS expression
Rule 39    expression -> expression POR expression
Rule 40    expression -> expression DIVIDIDO expression
Rule 41    expression -> expression MAYOR expression
Rule 42    expression -> expression MENOR expression
Rule 43    expression -> expression MAYORIG expression
Rule 44    expression -> expression MENORIG expression
Rule 45    expression -> expression IGIG expression
Rule 46    expression -> expression DIF expression
Rule 47    expression -> expression AND expression
Rule 48    expression -> expression OR expression
Rule 49    expression -> NOT expression
Rule 50    expression -> PARIZQ expression PARDER
Rule 51    expression -> expression TERN expression DOSPTS expression
Rule 52    expression -> ENTERO
Rule 53    expression -> CADENA
Rule 54    expression -> listArray
Rule 55    expression -> CORIZQ expressionList CORDER
Rule 56    expression -> ID PARIZQ expressionList PARDER
Rule 57    expression -> ID PARIZQ PARDER
Rule 58    listArray -> listArray CORIZQ expression CORDER
Rule 59    listArray -> listArray PUNTO ID
Rule 60    listArray -> ID

Terminals, with rules where they appear

AND                  : 47
BOOL                 : 34
BREAK                : 29
CADENA               : 53
COMA                 : 25 35
CONSOLE              : 14
CONTINUE             : 30
CORDER               : 18 55 58
CORIZQ               : 18 55 58
DECIMAL              : 
DIF                  : 46
DIVIDIDO             : 40
DOSPTS               : 17 18 25 26 27 51
ENTERO               : 52
FLOAT                : 32
FUNC                 : 22
ID                   : 17 18 19 20 21 22 25 26 56 57 59 60
IF                   : 15
IG                   : 17 18 19
IGIG                 : 45
LLAVEDER             : 15 16 22
LLAVEIZQ             : 15 16 22
LOG                  : 14
MAS                  : 37
MAYOR                : 41
MAYORIG              : 43
MENOR                : 42
MENORIG              : 44
MENOS                : 38
NOT                  : 49
NUMBER               : 31
OR                   : 48
PARDER               : 14 15 16 20 21 23 24 50 56 57
PARIZQ               : 14 15 16 20 21 23 24 50 56 57
POR                  : 39
PUNTO                : 14 59
PYC                  : 14 17 18 19 20 21 29 30
RETURN               : 
STRING               : 33
TERN                 : 51
VAR                  : 17 18
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 8
assignment           : 9
block                : 1 2 15 16 22
breakstmt            : 10
call                 : 13
continuestmt         : 11
declaration          : 7
expression           : 15 16 17 18 19 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 50 51 51 51 58
expressionList       : 14 20 35 55 56
funcparams           : 22
functionstmt         : 12
functype             : 22
ifinstruction        : 5
instruccion          : 2 3
listArray            : 54 58 59
paramsList           : 23 25
print                : 4
s                    : 0
type                 : 17 18 25 26 27
whileinstruction     : 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    instruccion                    shift and go to state 22
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    FUNC            reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> whileinstruction .)
    IF              reduce using rule 6 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 6 (instruccion -> whileinstruction .)
    VAR             reduce using rule 6 (instruccion -> whileinstruction .)
    ID              reduce using rule 6 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 6 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> whileinstruction .)
    FUNC            reduce using rule 6 (instruccion -> whileinstruction .)
    $end            reduce using rule 6 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> whileinstruction .)


state 7

    (7) instruccion -> declaration .

    CONSOLE         reduce using rule 7 (instruccion -> declaration .)
    IF              reduce using rule 7 (instruccion -> declaration .)
    WHILE           reduce using rule 7 (instruccion -> declaration .)
    VAR             reduce using rule 7 (instruccion -> declaration .)
    ID              reduce using rule 7 (instruccion -> declaration .)
    BREAK           reduce using rule 7 (instruccion -> declaration .)
    CONTINUE        reduce using rule 7 (instruccion -> declaration .)
    FUNC            reduce using rule 7 (instruccion -> declaration .)
    $end            reduce using rule 7 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 7 (instruccion -> declaration .)


state 8

    (8) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 8 (instruccion -> arraydeclaration .)
    IF              reduce using rule 8 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 8 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 8 (instruccion -> arraydeclaration .)
    ID              reduce using rule 8 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 8 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 8 (instruccion -> arraydeclaration .)
    FUNC            reduce using rule 8 (instruccion -> arraydeclaration .)
    $end            reduce using rule 8 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 8 (instruccion -> arraydeclaration .)


state 9

    (9) instruccion -> assignment .

    CONSOLE         reduce using rule 9 (instruccion -> assignment .)
    IF              reduce using rule 9 (instruccion -> assignment .)
    WHILE           reduce using rule 9 (instruccion -> assignment .)
    VAR             reduce using rule 9 (instruccion -> assignment .)
    ID              reduce using rule 9 (instruccion -> assignment .)
    BREAK           reduce using rule 9 (instruccion -> assignment .)
    CONTINUE        reduce using rule 9 (instruccion -> assignment .)
    FUNC            reduce using rule 9 (instruccion -> assignment .)
    $end            reduce using rule 9 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 9 (instruccion -> assignment .)


state 10

    (10) instruccion -> breakstmt .

    CONSOLE         reduce using rule 10 (instruccion -> breakstmt .)
    IF              reduce using rule 10 (instruccion -> breakstmt .)
    WHILE           reduce using rule 10 (instruccion -> breakstmt .)
    VAR             reduce using rule 10 (instruccion -> breakstmt .)
    ID              reduce using rule 10 (instruccion -> breakstmt .)
    BREAK           reduce using rule 10 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 10 (instruccion -> breakstmt .)
    FUNC            reduce using rule 10 (instruccion -> breakstmt .)
    $end            reduce using rule 10 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 10 (instruccion -> breakstmt .)


state 11

    (11) instruccion -> continuestmt .

    CONSOLE         reduce using rule 11 (instruccion -> continuestmt .)
    IF              reduce using rule 11 (instruccion -> continuestmt .)
    WHILE           reduce using rule 11 (instruccion -> continuestmt .)
    VAR             reduce using rule 11 (instruccion -> continuestmt .)
    ID              reduce using rule 11 (instruccion -> continuestmt .)
    BREAK           reduce using rule 11 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 11 (instruccion -> continuestmt .)
    FUNC            reduce using rule 11 (instruccion -> continuestmt .)
    $end            reduce using rule 11 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 11 (instruccion -> continuestmt .)


state 12

    (12) instruccion -> functionstmt .

    CONSOLE         reduce using rule 12 (instruccion -> functionstmt .)
    IF              reduce using rule 12 (instruccion -> functionstmt .)
    WHILE           reduce using rule 12 (instruccion -> functionstmt .)
    VAR             reduce using rule 12 (instruccion -> functionstmt .)
    ID              reduce using rule 12 (instruccion -> functionstmt .)
    BREAK           reduce using rule 12 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 12 (instruccion -> functionstmt .)
    FUNC            reduce using rule 12 (instruccion -> functionstmt .)
    $end            reduce using rule 12 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 12 (instruccion -> functionstmt .)


state 13

    (13) instruccion -> call .

    CONSOLE         reduce using rule 13 (instruccion -> call .)
    IF              reduce using rule 13 (instruccion -> call .)
    WHILE           reduce using rule 13 (instruccion -> call .)
    VAR             reduce using rule 13 (instruccion -> call .)
    ID              reduce using rule 13 (instruccion -> call .)
    BREAK           reduce using rule 13 (instruccion -> call .)
    CONTINUE        reduce using rule 13 (instruccion -> call .)
    FUNC            reduce using rule 13 (instruccion -> call .)
    $end            reduce using rule 13 (instruccion -> call .)
    LLAVEDER        reduce using rule 13 (instruccion -> call .)


state 14

    (14) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 23


state 15

    (15) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 24


state 16

    (16) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 25


state 17

    (17) declaration -> VAR . ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IG expression PYC

    ID              shift and go to state 26


state 18

    (19) assignment -> ID . IG expression PYC
    (20) call -> ID . PARIZQ expressionList PARDER PYC
    (21) call -> ID . PARIZQ PARDER PYC

    IG              shift and go to state 27
    PARIZQ          shift and go to state 28


state 19

    (29) breakstmt -> BREAK . PYC

    PYC             shift and go to state 29


state 20

    (30) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 30


state 21

    (22) functionstmt -> FUNC . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 31


state 22

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)


state 23

    (14) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 32


state 24

    (15) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 34
    listArray                      shift and go to state 38

state 25

    (16) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 41
    listArray                      shift and go to state 38

state 26

    (17) declaration -> VAR ID . DOSPTS type IG expression PYC
    (18) arraydeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IG expression PYC

    DOSPTS          shift and go to state 42


state 27

    (19) assignment -> ID IG . expression PYC
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 43
    listArray                      shift and go to state 38

state 28

    (20) call -> ID PARIZQ . expressionList PARDER PYC
    (21) call -> ID PARIZQ . PARDER PYC
    (35) expressionList -> . expressionList COMA expression
    (36) expressionList -> . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    PARDER          shift and go to state 45
    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expressionList                 shift and go to state 44
    expression                     shift and go to state 46
    listArray                      shift and go to state 38

state 29

    (29) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 29 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 29 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 29 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 29 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 29 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 29 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 29 (breakstmt -> BREAK PYC .)
    FUNC            reduce using rule 29 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 29 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 29 (breakstmt -> BREAK PYC .)


state 30

    (30) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    FUNC            reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 30 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 30 (continuestmt -> CONTINUE PYC .)


state 31

    (22) functionstmt -> FUNC ID . funcparams functype LLAVEIZQ block LLAVEDER
    (23) funcparams -> . PARIZQ paramsList PARDER
    (24) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 48

    funcparams                     shift and go to state 47

state 32

    (14) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 49


state 33

    (50) expression -> PARIZQ . expression PARDER
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 50
    listArray                      shift and go to state 38

state 34

    (15) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 51
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 35

    (49) expression -> NOT . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 65
    listArray                      shift and go to state 38

state 36

    (52) expression -> ENTERO .

    PARDER          reduce using rule 52 (expression -> ENTERO .)
    MAS             reduce using rule 52 (expression -> ENTERO .)
    MENOS           reduce using rule 52 (expression -> ENTERO .)
    POR             reduce using rule 52 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 52 (expression -> ENTERO .)
    MAYOR           reduce using rule 52 (expression -> ENTERO .)
    MENOR           reduce using rule 52 (expression -> ENTERO .)
    MAYORIG         reduce using rule 52 (expression -> ENTERO .)
    MENORIG         reduce using rule 52 (expression -> ENTERO .)
    IGIG            reduce using rule 52 (expression -> ENTERO .)
    DIF             reduce using rule 52 (expression -> ENTERO .)
    AND             reduce using rule 52 (expression -> ENTERO .)
    OR              reduce using rule 52 (expression -> ENTERO .)
    TERN            reduce using rule 52 (expression -> ENTERO .)
    PYC             reduce using rule 52 (expression -> ENTERO .)
    COMA            reduce using rule 52 (expression -> ENTERO .)
    CORDER          reduce using rule 52 (expression -> ENTERO .)
    DOSPTS          reduce using rule 52 (expression -> ENTERO .)


state 37

    (53) expression -> CADENA .

    PARDER          reduce using rule 53 (expression -> CADENA .)
    MAS             reduce using rule 53 (expression -> CADENA .)
    MENOS           reduce using rule 53 (expression -> CADENA .)
    POR             reduce using rule 53 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 53 (expression -> CADENA .)
    MAYOR           reduce using rule 53 (expression -> CADENA .)
    MENOR           reduce using rule 53 (expression -> CADENA .)
    MAYORIG         reduce using rule 53 (expression -> CADENA .)
    MENORIG         reduce using rule 53 (expression -> CADENA .)
    IGIG            reduce using rule 53 (expression -> CADENA .)
    DIF             reduce using rule 53 (expression -> CADENA .)
    AND             reduce using rule 53 (expression -> CADENA .)
    OR              reduce using rule 53 (expression -> CADENA .)
    TERN            reduce using rule 53 (expression -> CADENA .)
    PYC             reduce using rule 53 (expression -> CADENA .)
    COMA            reduce using rule 53 (expression -> CADENA .)
    CORDER          reduce using rule 53 (expression -> CADENA .)
    DOSPTS          reduce using rule 53 (expression -> CADENA .)


state 38

    (54) expression -> listArray .
    (58) listArray -> listArray . CORIZQ expression CORDER
    (59) listArray -> listArray . PUNTO ID

    PARDER          reduce using rule 54 (expression -> listArray .)
    MAS             reduce using rule 54 (expression -> listArray .)
    MENOS           reduce using rule 54 (expression -> listArray .)
    POR             reduce using rule 54 (expression -> listArray .)
    DIVIDIDO        reduce using rule 54 (expression -> listArray .)
    MAYOR           reduce using rule 54 (expression -> listArray .)
    MENOR           reduce using rule 54 (expression -> listArray .)
    MAYORIG         reduce using rule 54 (expression -> listArray .)
    MENORIG         reduce using rule 54 (expression -> listArray .)
    IGIG            reduce using rule 54 (expression -> listArray .)
    DIF             reduce using rule 54 (expression -> listArray .)
    AND             reduce using rule 54 (expression -> listArray .)
    OR              reduce using rule 54 (expression -> listArray .)
    TERN            reduce using rule 54 (expression -> listArray .)
    PYC             reduce using rule 54 (expression -> listArray .)
    COMA            reduce using rule 54 (expression -> listArray .)
    CORDER          reduce using rule 54 (expression -> listArray .)
    DOSPTS          reduce using rule 54 (expression -> listArray .)
    CORIZQ          shift and go to state 66
    PUNTO           shift and go to state 67


state 39

    (55) expression -> CORIZQ . expressionList CORDER
    (35) expressionList -> . expressionList COMA expression
    (36) expressionList -> . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expressionList                 shift and go to state 68
    expression                     shift and go to state 46
    listArray                      shift and go to state 38

state 40

    (56) expression -> ID . PARIZQ expressionList PARDER
    (57) expression -> ID . PARIZQ PARDER
    (60) listArray -> ID .

    PARIZQ          shift and go to state 69
    CORIZQ          reduce using rule 60 (listArray -> ID .)
    PUNTO           reduce using rule 60 (listArray -> ID .)
    PARDER          reduce using rule 60 (listArray -> ID .)
    MAS             reduce using rule 60 (listArray -> ID .)
    MENOS           reduce using rule 60 (listArray -> ID .)
    POR             reduce using rule 60 (listArray -> ID .)
    DIVIDIDO        reduce using rule 60 (listArray -> ID .)
    MAYOR           reduce using rule 60 (listArray -> ID .)
    MENOR           reduce using rule 60 (listArray -> ID .)
    MAYORIG         reduce using rule 60 (listArray -> ID .)
    MENORIG         reduce using rule 60 (listArray -> ID .)
    IGIG            reduce using rule 60 (listArray -> ID .)
    DIF             reduce using rule 60 (listArray -> ID .)
    AND             reduce using rule 60 (listArray -> ID .)
    OR              reduce using rule 60 (listArray -> ID .)
    TERN            reduce using rule 60 (listArray -> ID .)
    PYC             reduce using rule 60 (listArray -> ID .)
    COMA            reduce using rule 60 (listArray -> ID .)
    CORDER          reduce using rule 60 (listArray -> ID .)
    DOSPTS          reduce using rule 60 (listArray -> ID .)


state 41

    (16) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 70
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 42

    (17) declaration -> VAR ID DOSPTS . type IG expression PYC
    (18) arraydeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IG expression PYC
    (31) type -> . NUMBER
    (32) type -> . FLOAT
    (33) type -> . STRING
    (34) type -> . BOOL

    NUMBER          shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    BOOL            shift and go to state 75

    type                           shift and go to state 71

state 43

    (19) assignment -> ID IG expression . PYC
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 76
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 44

    (20) call -> ID PARIZQ expressionList . PARDER PYC
    (35) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 77
    COMA            shift and go to state 78


state 45

    (21) call -> ID PARIZQ PARDER . PYC

    PYC             shift and go to state 79


state 46

    (36) expressionList -> expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 36 (expressionList -> expression .)
    COMA            reduce using rule 36 (expressionList -> expression .)
    CORDER          reduce using rule 36 (expressionList -> expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 47

    (22) functionstmt -> FUNC ID funcparams . functype LLAVEIZQ block LLAVEDER
    (27) functype -> . DOSPTS type
    (28) functype -> .

    DOSPTS          shift and go to state 81
    LLAVEIZQ        reduce using rule 28 (functype -> .)

    functype                       shift and go to state 80

state 48

    (23) funcparams -> PARIZQ . paramsList PARDER
    (24) funcparams -> PARIZQ . PARDER
    (25) paramsList -> . paramsList COMA ID DOSPTS type
    (26) paramsList -> . ID DOSPTS type

    PARDER          shift and go to state 83
    ID              shift and go to state 84

    paramsList                     shift and go to state 82

state 49

    (14) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (35) expressionList -> . expressionList COMA expression
    (36) expressionList -> . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expressionList                 shift and go to state 85
    expression                     shift and go to state 46
    listArray                      shift and go to state 38

state 50

    (50) expression -> PARIZQ expression . PARDER
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 86
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 51

    (15) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 87


state 52

    (37) expression -> expression MAS . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 88
    listArray                      shift and go to state 38

state 53

    (38) expression -> expression MENOS . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 89
    listArray                      shift and go to state 38

state 54

    (39) expression -> expression POR . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 90
    listArray                      shift and go to state 38

state 55

    (40) expression -> expression DIVIDIDO . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 91
    listArray                      shift and go to state 38

state 56

    (41) expression -> expression MAYOR . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 92
    listArray                      shift and go to state 38

state 57

    (42) expression -> expression MENOR . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 93
    listArray                      shift and go to state 38

state 58

    (43) expression -> expression MAYORIG . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 94
    listArray                      shift and go to state 38

state 59

    (44) expression -> expression MENORIG . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 95
    listArray                      shift and go to state 38

state 60

    (45) expression -> expression IGIG . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 96
    listArray                      shift and go to state 38

state 61

    (46) expression -> expression DIF . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 97
    listArray                      shift and go to state 38

state 62

    (47) expression -> expression AND . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 98
    listArray                      shift and go to state 38

state 63

    (48) expression -> expression OR . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 99
    listArray                      shift and go to state 38

state 64

    (51) expression -> expression TERN . expression DOSPTS expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 100
    listArray                      shift and go to state 38

state 65

    (49) expression -> NOT expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PARDER          reduce using rule 49 (expression -> NOT expression .)
    PYC             reduce using rule 49 (expression -> NOT expression .)
    COMA            reduce using rule 49 (expression -> NOT expression .)
    CORDER          reduce using rule 49 (expression -> NOT expression .)
    DOSPTS          reduce using rule 49 (expression -> NOT expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64

  ! MAS             [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MENOS           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! POR             [ reduce using rule 49 (expression -> NOT expression .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MAYORIG         [ reduce using rule 49 (expression -> NOT expression .) ]
  ! MENORIG         [ reduce using rule 49 (expression -> NOT expression .) ]
  ! IGIG            [ reduce using rule 49 (expression -> NOT expression .) ]
  ! DIF             [ reduce using rule 49 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 49 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 49 (expression -> NOT expression .) ]
  ! TERN            [ reduce using rule 49 (expression -> NOT expression .) ]


state 66

    (58) listArray -> listArray CORIZQ . expression CORDER
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    listArray                      shift and go to state 38
    expression                     shift and go to state 101

state 67

    (59) listArray -> listArray PUNTO . ID

    ID              shift and go to state 102


state 68

    (55) expression -> CORIZQ expressionList . CORDER
    (35) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 103
    COMA            shift and go to state 78


state 69

    (56) expression -> ID PARIZQ . expressionList PARDER
    (57) expression -> ID PARIZQ . PARDER
    (35) expressionList -> . expressionList COMA expression
    (36) expressionList -> . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    PARDER          shift and go to state 105
    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expressionList                 shift and go to state 104
    expression                     shift and go to state 46
    listArray                      shift and go to state 38

state 70

    (16) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 106


state 71

    (17) declaration -> VAR ID DOSPTS type . IG expression PYC
    (18) arraydeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IG expression PYC

    IG              shift and go to state 107
    CORIZQ          shift and go to state 108


state 72

    (31) type -> NUMBER .

    IG              reduce using rule 31 (type -> NUMBER .)
    CORIZQ          reduce using rule 31 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 31 (type -> NUMBER .)
    PARDER          reduce using rule 31 (type -> NUMBER .)
    COMA            reduce using rule 31 (type -> NUMBER .)


state 73

    (32) type -> FLOAT .

    IG              reduce using rule 32 (type -> FLOAT .)
    CORIZQ          reduce using rule 32 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 32 (type -> FLOAT .)
    PARDER          reduce using rule 32 (type -> FLOAT .)
    COMA            reduce using rule 32 (type -> FLOAT .)


state 74

    (33) type -> STRING .

    IG              reduce using rule 33 (type -> STRING .)
    CORIZQ          reduce using rule 33 (type -> STRING .)
    LLAVEIZQ        reduce using rule 33 (type -> STRING .)
    PARDER          reduce using rule 33 (type -> STRING .)
    COMA            reduce using rule 33 (type -> STRING .)


state 75

    (34) type -> BOOL .

    IG              reduce using rule 34 (type -> BOOL .)
    CORIZQ          reduce using rule 34 (type -> BOOL .)
    LLAVEIZQ        reduce using rule 34 (type -> BOOL .)
    PARDER          reduce using rule 34 (type -> BOOL .)
    COMA            reduce using rule 34 (type -> BOOL .)


state 76

    (19) assignment -> ID IG expression PYC .

    CONSOLE         reduce using rule 19 (assignment -> ID IG expression PYC .)
    IF              reduce using rule 19 (assignment -> ID IG expression PYC .)
    WHILE           reduce using rule 19 (assignment -> ID IG expression PYC .)
    VAR             reduce using rule 19 (assignment -> ID IG expression PYC .)
    ID              reduce using rule 19 (assignment -> ID IG expression PYC .)
    BREAK           reduce using rule 19 (assignment -> ID IG expression PYC .)
    CONTINUE        reduce using rule 19 (assignment -> ID IG expression PYC .)
    FUNC            reduce using rule 19 (assignment -> ID IG expression PYC .)
    $end            reduce using rule 19 (assignment -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 19 (assignment -> ID IG expression PYC .)


state 77

    (20) call -> ID PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 109


state 78

    (35) expressionList -> expressionList COMA . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 110
    listArray                      shift and go to state 38

state 79

    (21) call -> ID PARIZQ PARDER PYC .

    CONSOLE         reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    IF              reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    WHILE           reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    VAR             reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    ID              reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    BREAK           reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    CONTINUE        reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    FUNC            reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    $end            reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 21 (call -> ID PARIZQ PARDER PYC .)


state 80

    (22) functionstmt -> FUNC ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 111


state 81

    (27) functype -> DOSPTS . type
    (31) type -> . NUMBER
    (32) type -> . FLOAT
    (33) type -> . STRING
    (34) type -> . BOOL

    NUMBER          shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    BOOL            shift and go to state 75

    type                           shift and go to state 112

state 82

    (23) funcparams -> PARIZQ paramsList . PARDER
    (25) paramsList -> paramsList . COMA ID DOSPTS type

    PARDER          shift and go to state 113
    COMA            shift and go to state 114


state 83

    (24) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 24 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 24 (funcparams -> PARIZQ PARDER .)


state 84

    (26) paramsList -> ID . DOSPTS type

    DOSPTS          shift and go to state 115


state 85

    (14) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (35) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 116
    COMA            shift and go to state 78


state 86

    (50) expression -> PARIZQ expression PARDER .

    PARDER          reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    TERN            reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    PYC             reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 50 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 50 (expression -> PARIZQ expression PARDER .)


state 87

    (15) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    block                          shift and go to state 117
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 88

    (37) expression -> expression MAS expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 37 (expression -> expression MAS expression .)
    MAS             reduce using rule 37 (expression -> expression MAS expression .)
    MENOS           reduce using rule 37 (expression -> expression MAS expression .)
    IGIG            reduce using rule 37 (expression -> expression MAS expression .)
    DIF             reduce using rule 37 (expression -> expression MAS expression .)
    TERN            reduce using rule 37 (expression -> expression MAS expression .)
    PYC             reduce using rule 37 (expression -> expression MAS expression .)
    COMA            reduce using rule 37 (expression -> expression MAS expression .)
    CORDER          reduce using rule 37 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 37 (expression -> expression MAS expression .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! POR             [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! MAYOR           [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! MENOR           [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! MAYORIG         [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! MENORIG         [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 89

    (38) expression -> expression MENOS expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 38 (expression -> expression MENOS expression .)
    MAS             reduce using rule 38 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 38 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 38 (expression -> expression MENOS expression .)
    DIF             reduce using rule 38 (expression -> expression MENOS expression .)
    TERN            reduce using rule 38 (expression -> expression MENOS expression .)
    PYC             reduce using rule 38 (expression -> expression MENOS expression .)
    COMA            reduce using rule 38 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 38 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 38 (expression -> expression MENOS expression .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! POR             [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! MAYOR           [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! MENOR           [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! MAYORIG         [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! MENORIG         [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 90

    (39) expression -> expression POR expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 39 (expression -> expression POR expression .)
    MAS             reduce using rule 39 (expression -> expression POR expression .)
    MENOS           reduce using rule 39 (expression -> expression POR expression .)
    POR             reduce using rule 39 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 39 (expression -> expression POR expression .)
    IGIG            reduce using rule 39 (expression -> expression POR expression .)
    DIF             reduce using rule 39 (expression -> expression POR expression .)
    TERN            reduce using rule 39 (expression -> expression POR expression .)
    PYC             reduce using rule 39 (expression -> expression POR expression .)
    COMA            reduce using rule 39 (expression -> expression POR expression .)
    CORDER          reduce using rule 39 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 39 (expression -> expression POR expression .)
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! MAYOR           [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! MENOR           [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! MAYORIG         [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! MENORIG         [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression POR expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 91

    (40) expression -> expression DIVIDIDO expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    TERN            reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    PYC             reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 40 (expression -> expression DIVIDIDO expression .)
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! MAYOR           [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! MENOR           [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! MAYORIG         [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! MENORIG         [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression DIVIDIDO expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 92

    (41) expression -> expression MAYOR expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 41 (expression -> expression MAYOR expression .)
    MAS             reduce using rule 41 (expression -> expression MAYOR expression .)
    MENOS           reduce using rule 41 (expression -> expression MAYOR expression .)
    POR             reduce using rule 41 (expression -> expression MAYOR expression .)
    DIVIDIDO        reduce using rule 41 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 41 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 41 (expression -> expression MAYOR expression .)
    IGIG            reduce using rule 41 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 41 (expression -> expression MAYOR expression .)
    TERN            reduce using rule 41 (expression -> expression MAYOR expression .)
    PYC             reduce using rule 41 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 41 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 41 (expression -> expression MAYOR expression .)
    DOSPTS          reduce using rule 41 (expression -> expression MAYOR expression .)
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! MAYORIG         [ reduce using rule 41 (expression -> expression MAYOR expression .) ]
  ! MENORIG         [ reduce using rule 41 (expression -> expression MAYOR expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression MAYOR expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression MAYOR expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 93

    (42) expression -> expression MENOR expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 42 (expression -> expression MENOR expression .)
    MAS             reduce using rule 42 (expression -> expression MENOR expression .)
    MENOS           reduce using rule 42 (expression -> expression MENOR expression .)
    POR             reduce using rule 42 (expression -> expression MENOR expression .)
    DIVIDIDO        reduce using rule 42 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 42 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 42 (expression -> expression MENOR expression .)
    IGIG            reduce using rule 42 (expression -> expression MENOR expression .)
    DIF             reduce using rule 42 (expression -> expression MENOR expression .)
    TERN            reduce using rule 42 (expression -> expression MENOR expression .)
    PYC             reduce using rule 42 (expression -> expression MENOR expression .)
    COMA            reduce using rule 42 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 42 (expression -> expression MENOR expression .)
    DOSPTS          reduce using rule 42 (expression -> expression MENOR expression .)
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! MAYORIG         [ reduce using rule 42 (expression -> expression MENOR expression .) ]
  ! MENORIG         [ reduce using rule 42 (expression -> expression MENOR expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression MENOR expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression MENOR expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 94

    (43) expression -> expression MAYORIG expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 43 (expression -> expression MAYORIG expression .)
    MAS             reduce using rule 43 (expression -> expression MAYORIG expression .)
    MENOS           reduce using rule 43 (expression -> expression MAYORIG expression .)
    POR             reduce using rule 43 (expression -> expression MAYORIG expression .)
    DIVIDIDO        reduce using rule 43 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 43 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 43 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 43 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 43 (expression -> expression MAYORIG expression .)
    IGIG            reduce using rule 43 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 43 (expression -> expression MAYORIG expression .)
    TERN            reduce using rule 43 (expression -> expression MAYORIG expression .)
    PYC             reduce using rule 43 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 43 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 43 (expression -> expression MAYORIG expression .)
    DOSPTS          reduce using rule 43 (expression -> expression MAYORIG expression .)
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! AND             [ reduce using rule 43 (expression -> expression MAYORIG expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression MAYORIG expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! MAYORIG         [ shift and go to state 58 ]
  ! MENORIG         [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 95

    (44) expression -> expression MENORIG expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 44 (expression -> expression MENORIG expression .)
    MAS             reduce using rule 44 (expression -> expression MENORIG expression .)
    MENOS           reduce using rule 44 (expression -> expression MENORIG expression .)
    POR             reduce using rule 44 (expression -> expression MENORIG expression .)
    DIVIDIDO        reduce using rule 44 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 44 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 44 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 44 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 44 (expression -> expression MENORIG expression .)
    IGIG            reduce using rule 44 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 44 (expression -> expression MENORIG expression .)
    TERN            reduce using rule 44 (expression -> expression MENORIG expression .)
    PYC             reduce using rule 44 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 44 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 44 (expression -> expression MENORIG expression .)
    DOSPTS          reduce using rule 44 (expression -> expression MENORIG expression .)
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! AND             [ reduce using rule 44 (expression -> expression MENORIG expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression MENORIG expression .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! MAYORIG         [ shift and go to state 58 ]
  ! MENORIG         [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! TERN            [ shift and go to state 64 ]


state 96

    (45) expression -> expression IGIG expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PARDER          reduce using rule 45 (expression -> expression IGIG expression .)
    PYC             reduce using rule 45 (expression -> expression IGIG expression .)
    COMA            reduce using rule 45 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 45 (expression -> expression IGIG expression .)
    DOSPTS          reduce using rule 45 (expression -> expression IGIG expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64

  ! MAS             [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! MAYOR           [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! MENOR           [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! MAYORIG         [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! MENORIG         [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! IGIG            [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! DIF             [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression IGIG expression .) ]
  ! TERN            [ reduce using rule 45 (expression -> expression IGIG expression .) ]


state 97

    (46) expression -> expression DIF expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PARDER          reduce using rule 46 (expression -> expression DIF expression .)
    PYC             reduce using rule 46 (expression -> expression DIF expression .)
    COMA            reduce using rule 46 (expression -> expression DIF expression .)
    CORDER          reduce using rule 46 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 46 (expression -> expression DIF expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64

  ! MAS             [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! IGIG            [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression DIF expression .) ]
  ! TERN            [ reduce using rule 46 (expression -> expression DIF expression .) ]


state 98

    (47) expression -> expression AND expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 47 (expression -> expression AND expression .)
    MAS             reduce using rule 47 (expression -> expression AND expression .)
    MENOS           reduce using rule 47 (expression -> expression AND expression .)
    POR             reduce using rule 47 (expression -> expression AND expression .)
    DIVIDIDO        reduce using rule 47 (expression -> expression AND expression .)
    MAYOR           reduce using rule 47 (expression -> expression AND expression .)
    MENOR           reduce using rule 47 (expression -> expression AND expression .)
    MAYORIG         reduce using rule 47 (expression -> expression AND expression .)
    MENORIG         reduce using rule 47 (expression -> expression AND expression .)
    IGIG            reduce using rule 47 (expression -> expression AND expression .)
    DIF             reduce using rule 47 (expression -> expression AND expression .)
    AND             reduce using rule 47 (expression -> expression AND expression .)
    OR              reduce using rule 47 (expression -> expression AND expression .)
    TERN            reduce using rule 47 (expression -> expression AND expression .)
    PYC             reduce using rule 47 (expression -> expression AND expression .)
    COMA            reduce using rule 47 (expression -> expression AND expression .)
    CORDER          reduce using rule 47 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 47 (expression -> expression AND expression .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! MAYORIG         [ shift and go to state 58 ]
  ! MENORIG         [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! TERN            [ shift and go to state 64 ]


state 99

    (48) expression -> expression OR expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 48 (expression -> expression OR expression .)
    MAS             reduce using rule 48 (expression -> expression OR expression .)
    MENOS           reduce using rule 48 (expression -> expression OR expression .)
    POR             reduce using rule 48 (expression -> expression OR expression .)
    DIVIDIDO        reduce using rule 48 (expression -> expression OR expression .)
    MAYOR           reduce using rule 48 (expression -> expression OR expression .)
    MENOR           reduce using rule 48 (expression -> expression OR expression .)
    MAYORIG         reduce using rule 48 (expression -> expression OR expression .)
    MENORIG         reduce using rule 48 (expression -> expression OR expression .)
    IGIG            reduce using rule 48 (expression -> expression OR expression .)
    DIF             reduce using rule 48 (expression -> expression OR expression .)
    AND             reduce using rule 48 (expression -> expression OR expression .)
    OR              reduce using rule 48 (expression -> expression OR expression .)
    TERN            reduce using rule 48 (expression -> expression OR expression .)
    PYC             reduce using rule 48 (expression -> expression OR expression .)
    COMA            reduce using rule 48 (expression -> expression OR expression .)
    CORDER          reduce using rule 48 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 48 (expression -> expression OR expression .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MAYOR           [ shift and go to state 56 ]
  ! MENOR           [ shift and go to state 57 ]
  ! MAYORIG         [ shift and go to state 58 ]
  ! MENORIG         [ shift and go to state 59 ]
  ! IGIG            [ shift and go to state 60 ]
  ! DIF             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! TERN            [ shift and go to state 64 ]


state 100

    (51) expression -> expression TERN expression . DOSPTS expression
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 118
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 101

    (58) listArray -> listArray CORIZQ expression . CORDER
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 119
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 102

    (59) listArray -> listArray PUNTO ID .

    CORIZQ          reduce using rule 59 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 59 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 59 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 59 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MAYOR           reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MENOR           reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MAYORIG         reduce using rule 59 (listArray -> listArray PUNTO ID .)
    MENORIG         reduce using rule 59 (listArray -> listArray PUNTO ID .)
    IGIG            reduce using rule 59 (listArray -> listArray PUNTO ID .)
    DIF             reduce using rule 59 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 59 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 59 (listArray -> listArray PUNTO ID .)
    TERN            reduce using rule 59 (listArray -> listArray PUNTO ID .)
    PYC             reduce using rule 59 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 59 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 59 (listArray -> listArray PUNTO ID .)
    DOSPTS          reduce using rule 59 (listArray -> listArray PUNTO ID .)


state 103

    (55) expression -> CORIZQ expressionList CORDER .

    PARDER          reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    IGIG            reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    PYC             reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)
    DOSPTS          reduce using rule 55 (expression -> CORIZQ expressionList CORDER .)


state 104

    (56) expression -> ID PARIZQ expressionList . PARDER
    (35) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 120
    COMA            shift and go to state 78


state 105

    (57) expression -> ID PARIZQ PARDER .

    PARDER          reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MAYORIG         reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    MENORIG         reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    TERN            reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    PYC             reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 57 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 57 (expression -> ID PARIZQ PARDER .)


state 106

    (16) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    block                          shift and go to state 121
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 107

    (17) declaration -> VAR ID DOSPTS type IG . expression PYC
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 122
    listArray                      shift and go to state 38

state 108

    (18) arraydeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IG expression PYC

    CORDER          shift and go to state 123


state 109

    (20) call -> ID PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 20 (call -> ID PARIZQ expressionList PARDER PYC .)


state 110

    (35) expressionList -> expressionList COMA expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 35 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 35 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 35 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 111

    (22) functionstmt -> FUNC ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    block                          shift and go to state 124
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 112

    (27) functype -> DOSPTS type .

    LLAVEIZQ        reduce using rule 27 (functype -> DOSPTS type .)


state 113

    (23) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 23 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 23 (funcparams -> PARIZQ paramsList PARDER .)


state 114

    (25) paramsList -> paramsList COMA . ID DOSPTS type

    ID              shift and go to state 125


state 115

    (26) paramsList -> ID DOSPTS . type
    (31) type -> . NUMBER
    (32) type -> . FLOAT
    (33) type -> . STRING
    (34) type -> . BOOL

    NUMBER          shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    BOOL            shift and go to state 75

    type                           shift and go to state 126

state 116

    (14) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 127


state 117

    (15) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    LLAVEDER        shift and go to state 128
    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    instruccion                    shift and go to state 22
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 118

    (51) expression -> expression TERN expression DOSPTS . expression
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 129
    listArray                      shift and go to state 38

state 119

    (58) listArray -> listArray CORIZQ expression CORDER .

    CORIZQ          reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    PUNTO           reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    PARDER          reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MAS             reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MENOS           reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    POR             reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MAYOR           reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MENOR           reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    MENORIG         reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    IGIG            reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    DIF             reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    AND             reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    OR              reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    TERN            reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    PYC             reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    COMA            reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    CORDER          reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 58 (listArray -> listArray CORIZQ expression CORDER .)


state 120

    (56) expression -> ID PARIZQ expressionList PARDER .

    PARDER          reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MAYOR           reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MENOR           reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MAYORIG         reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    MENORIG         reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    IGIG            reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    PYC             reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 56 (expression -> ID PARIZQ expressionList PARDER .)


state 121

    (16) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    LLAVEDER        shift and go to state 130
    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    instruccion                    shift and go to state 22
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 122

    (17) declaration -> VAR ID DOSPTS type IG expression . PYC
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 131
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 123

    (18) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IG expression PYC

    IG              shift and go to state 132


state 124

    (22) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (15) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (16) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (17) declaration -> . VAR ID DOSPTS type IG expression PYC
    (18) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG expression PYC
    (19) assignment -> . ID IG expression PYC
    (29) breakstmt -> . BREAK PYC
    (30) continuestmt -> . CONTINUE PYC
    (22) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (20) call -> . ID PARIZQ expressionList PARDER PYC
    (21) call -> . ID PARIZQ PARDER PYC

    LLAVEDER        shift and go to state 133
    CONSOLE         shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    VAR             shift and go to state 17
    ID              shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    FUNC            shift and go to state 21

    instruccion                    shift and go to state 22
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13

state 125

    (25) paramsList -> paramsList COMA ID . DOSPTS type

    DOSPTS          shift and go to state 134


state 126

    (26) paramsList -> ID DOSPTS type .

    PARDER          reduce using rule 26 (paramsList -> ID DOSPTS type .)
    COMA            reduce using rule 26 (paramsList -> ID DOSPTS type .)


state 127

    (14) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 14 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 128

    (15) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 15 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 129

    (51) expression -> expression TERN expression DOSPTS expression .
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PARDER          reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .)
    PYC             reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .)
    COMA            reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .)
    CORDER          reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .)
    DOSPTS          reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64

  ! MAS             [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOS           [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! POR             [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYOR           [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOR           [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYORIG         [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENORIG         [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! IGIG            [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIF             [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]
  ! TERN            [ reduce using rule 51 (expression -> expression TERN expression DOSPTS expression .) ]


state 130

    (16) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 16 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 131

    (17) declaration -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FUNC            reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 17 (declaration -> VAR ID DOSPTS type IG expression PYC .)


state 132

    (18) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG . expression PYC
    (37) expression -> . expression MAS expression
    (38) expression -> . expression MENOS expression
    (39) expression -> . expression POR expression
    (40) expression -> . expression DIVIDIDO expression
    (41) expression -> . expression MAYOR expression
    (42) expression -> . expression MENOR expression
    (43) expression -> . expression MAYORIG expression
    (44) expression -> . expression MENORIG expression
    (45) expression -> . expression IGIG expression
    (46) expression -> . expression DIF expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . PARIZQ expression PARDER
    (51) expression -> . expression TERN expression DOSPTS expression
    (52) expression -> . ENTERO
    (53) expression -> . CADENA
    (54) expression -> . listArray
    (55) expression -> . CORIZQ expressionList CORDER
    (56) expression -> . ID PARIZQ expressionList PARDER
    (57) expression -> . ID PARIZQ PARDER
    (58) listArray -> . listArray CORIZQ expression CORDER
    (59) listArray -> . listArray PUNTO ID
    (60) listArray -> . ID

    NOT             shift and go to state 35
    PARIZQ          shift and go to state 33
    ENTERO          shift and go to state 36
    CADENA          shift and go to state 37
    CORIZQ          shift and go to state 39
    ID              shift and go to state 40

    expression                     shift and go to state 135
    listArray                      shift and go to state 38

state 133

    (22) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 22 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 134

    (25) paramsList -> paramsList COMA ID DOSPTS . type
    (31) type -> . NUMBER
    (32) type -> . FLOAT
    (33) type -> . STRING
    (34) type -> . BOOL

    NUMBER          shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    BOOL            shift and go to state 75

    type                           shift and go to state 136

state 135

    (18) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression . PYC
    (37) expression -> expression . MAS expression
    (38) expression -> expression . MENOS expression
    (39) expression -> expression . POR expression
    (40) expression -> expression . DIVIDIDO expression
    (41) expression -> expression . MAYOR expression
    (42) expression -> expression . MENOR expression
    (43) expression -> expression . MAYORIG expression
    (44) expression -> expression . MENORIG expression
    (45) expression -> expression . IGIG expression
    (46) expression -> expression . DIF expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (51) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 137
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYORIG         shift and go to state 58
    MENORIG         shift and go to state 59
    IGIG            shift and go to state 60
    DIF             shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63
    TERN            shift and go to state 64


state 136

    (25) paramsList -> paramsList COMA ID DOSPTS type .

    PARDER          reduce using rule 25 (paramsList -> paramsList COMA ID DOSPTS type .)
    COMA            reduce using rule 25 (paramsList -> paramsList COMA ID DOSPTS type .)


state 137

    (18) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .

    CONSOLE         reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    IF              reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    WHILE           reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    VAR             reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    ID              reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    BREAK           reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    CONTINUE        reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    FUNC            reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    $end            reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)
    LLAVEDER        reduce using rule 18 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG expression PYC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 65 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 65 resolved as shift
WARNING: shift/reduce conflict for POR in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 65 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 65 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 65 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 65 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 65 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 65 resolved as shift
WARNING: shift/reduce conflict for DIF in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for TERN in state 65 resolved as shift
WARNING: shift/reduce conflict for MAS in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 96 resolved as shift
WARNING: shift/reduce conflict for POR in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 96 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 96 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 96 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 96 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 96 resolved as shift
WARNING: shift/reduce conflict for DIF in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 96 resolved as shift
WARNING: shift/reduce conflict for OR in state 96 resolved as shift
WARNING: shift/reduce conflict for TERN in state 96 resolved as shift
WARNING: shift/reduce conflict for MAS in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 97 resolved as shift
WARNING: shift/reduce conflict for POR in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 97 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 97 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 97 resolved as shift
WARNING: shift/reduce conflict for DIF in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for TERN in state 97 resolved as shift
WARNING: shift/reduce conflict for MAS in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 129 resolved as shift
WARNING: shift/reduce conflict for POR in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 129 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 129 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 129 resolved as shift
WARNING: shift/reduce conflict for DIF in state 129 resolved as shift
WARNING: shift/reduce conflict for AND in state 129 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for TERN in state 129 resolved as shift
