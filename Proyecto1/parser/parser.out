Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECIMAL

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 4     instruccion -> VAR ID DOSPTS type IG expression PYC
Rule 5     type -> NUMBER
Rule 6     type -> FLOAT
Rule 7     type -> STRING
Rule 8     type -> BOOL
Rule 9     expressionList -> expressionList COMA expression
Rule 10    expressionList -> expression
Rule 11    expression -> expression MAS expression
Rule 12    expression -> expression MENOS expression
Rule 13    expression -> expression POR expression
Rule 14    expression -> expression DIVIDIDO expression
Rule 15    expression -> PARIZQ expression PARDER
Rule 16    expression -> ENTERO
Rule 17    expression -> CADENA
Rule 18    expression -> listArray
Rule 19    listArray -> listArray PUNTO ID
Rule 20    listArray -> listArray listAccessArray
Rule 21    listArray -> ID
Rule 22    listAccessArray -> listAccessArray CORIZQ expression CORDER
Rule 23    listAccessArray -> CORIZQ expression CORDER

Terminals, with rules where they appear

BOOL                 : 8
CADENA               : 17
COMA                 : 9
CONSOLE              : 3
CORDER               : 22 23
CORIZQ               : 22 23
DECIMAL              : 
DIVIDIDO             : 14
DOSPTS               : 4
ENTERO               : 16
FLOAT                : 6
ID                   : 4 19 21
IG                   : 4
LOG                  : 3
MAS                  : 11
MENOS                : 12
NUMBER               : 5
PARDER               : 3 15
PARIZQ               : 3 15
POR                  : 13
PUNTO                : 3 19
PYC                  : 3 4
STRING               : 7
VAR                  : 4
error                : 

Nonterminals, with rules where they appear

expression           : 4 9 10 11 11 12 12 13 13 14 14 15 22 23
expressionList       : 3 9
instruccion          : 1 2
instrucciones        : 1 0
listAccessArray      : 20 22
listArray            : 18 19 20
type                 : 4

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (4) instruccion -> . VAR ID DOSPTS type IG expression PYC

    CONSOLE         shift and go to state 3
    VAR             shift and go to state 4

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (4) instruccion -> . VAR ID DOSPTS type IG expression PYC

    CONSOLE         shift and go to state 3
    VAR             shift and go to state 4

    instruccion                    shift and go to state 5

state 2

    (2) instrucciones -> instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 6


state 4

    (4) instruccion -> VAR . ID DOSPTS type IG expression PYC

    ID              shift and go to state 7


state 5

    (1) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 6

    (3) instruccion -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 8


state 7

    (4) instruccion -> VAR ID . DOSPTS type IG expression PYC

    DOSPTS          shift and go to state 9


state 8

    (3) instruccion -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 10


state 9

    (4) instruccion -> VAR ID DOSPTS . type IG expression PYC
    (5) type -> . NUMBER
    (6) type -> . FLOAT
    (7) type -> . STRING
    (8) type -> . BOOL

    NUMBER          shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 11

state 10

    (3) instruccion -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (9) expressionList -> . expressionList COMA expression
    (10) expressionList -> . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expressionList                 shift and go to state 17
    expression                     shift and go to state 18
    listArray                      shift and go to state 21

state 11

    (4) instruccion -> VAR ID DOSPTS type . IG expression PYC

    IG              shift and go to state 23


state 12

    (5) type -> NUMBER .

    IG              reduce using rule 5 (type -> NUMBER .)


state 13

    (6) type -> FLOAT .

    IG              reduce using rule 6 (type -> FLOAT .)


state 14

    (7) type -> STRING .

    IG              reduce using rule 7 (type -> STRING .)


state 15

    (8) type -> BOOL .

    IG              reduce using rule 8 (type -> BOOL .)


state 16

    (15) expression -> PARIZQ . expression PARDER
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 24
    listArray                      shift and go to state 21

state 17

    (3) instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (9) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 25
    COMA            shift and go to state 26


state 18

    (10) expressionList -> expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    PARDER          reduce using rule 10 (expressionList -> expression .)
    COMA            reduce using rule 10 (expressionList -> expression .)
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 19

    (16) expression -> ENTERO .

    MAS             reduce using rule 16 (expression -> ENTERO .)
    MENOS           reduce using rule 16 (expression -> ENTERO .)
    POR             reduce using rule 16 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 16 (expression -> ENTERO .)
    PARDER          reduce using rule 16 (expression -> ENTERO .)
    COMA            reduce using rule 16 (expression -> ENTERO .)
    PYC             reduce using rule 16 (expression -> ENTERO .)
    CORDER          reduce using rule 16 (expression -> ENTERO .)


state 20

    (17) expression -> CADENA .

    MAS             reduce using rule 17 (expression -> CADENA .)
    MENOS           reduce using rule 17 (expression -> CADENA .)
    POR             reduce using rule 17 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 17 (expression -> CADENA .)
    PARDER          reduce using rule 17 (expression -> CADENA .)
    COMA            reduce using rule 17 (expression -> CADENA .)
    PYC             reduce using rule 17 (expression -> CADENA .)
    CORDER          reduce using rule 17 (expression -> CADENA .)


state 21

    (18) expression -> listArray .
    (19) listArray -> listArray . PUNTO ID
    (20) listArray -> listArray . listAccessArray
    (22) listAccessArray -> . listAccessArray CORIZQ expression CORDER
    (23) listAccessArray -> . CORIZQ expression CORDER

    MAS             reduce using rule 18 (expression -> listArray .)
    MENOS           reduce using rule 18 (expression -> listArray .)
    POR             reduce using rule 18 (expression -> listArray .)
    DIVIDIDO        reduce using rule 18 (expression -> listArray .)
    PARDER          reduce using rule 18 (expression -> listArray .)
    COMA            reduce using rule 18 (expression -> listArray .)
    PYC             reduce using rule 18 (expression -> listArray .)
    CORDER          reduce using rule 18 (expression -> listArray .)
    PUNTO           shift and go to state 31
    CORIZQ          shift and go to state 33

    listAccessArray                shift and go to state 32

state 22

    (21) listArray -> ID .

    PUNTO           reduce using rule 21 (listArray -> ID .)
    CORIZQ          reduce using rule 21 (listArray -> ID .)
    MAS             reduce using rule 21 (listArray -> ID .)
    MENOS           reduce using rule 21 (listArray -> ID .)
    POR             reduce using rule 21 (listArray -> ID .)
    DIVIDIDO        reduce using rule 21 (listArray -> ID .)
    PARDER          reduce using rule 21 (listArray -> ID .)
    COMA            reduce using rule 21 (listArray -> ID .)
    PYC             reduce using rule 21 (listArray -> ID .)
    CORDER          reduce using rule 21 (listArray -> ID .)


state 23

    (4) instruccion -> VAR ID DOSPTS type IG . expression PYC
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 34
    listArray                      shift and go to state 21

state 24

    (15) expression -> PARIZQ expression . PARDER
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    PARDER          shift and go to state 35
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 25

    (3) instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 36


state 26

    (9) expressionList -> expressionList COMA . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 37
    listArray                      shift and go to state 21

state 27

    (11) expression -> expression MAS . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 38
    listArray                      shift and go to state 21

state 28

    (12) expression -> expression MENOS . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 39
    listArray                      shift and go to state 21

state 29

    (13) expression -> expression POR . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 40
    listArray                      shift and go to state 21

state 30

    (14) expression -> expression DIVIDIDO . expression
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 41
    listArray                      shift and go to state 21

state 31

    (19) listArray -> listArray PUNTO . ID

    ID              shift and go to state 42


state 32

    (20) listArray -> listArray listAccessArray .
    (22) listAccessArray -> listAccessArray . CORIZQ expression CORDER

  ! shift/reduce conflict for CORIZQ resolved as shift
    PUNTO           reduce using rule 20 (listArray -> listArray listAccessArray .)
    MAS             reduce using rule 20 (listArray -> listArray listAccessArray .)
    MENOS           reduce using rule 20 (listArray -> listArray listAccessArray .)
    POR             reduce using rule 20 (listArray -> listArray listAccessArray .)
    DIVIDIDO        reduce using rule 20 (listArray -> listArray listAccessArray .)
    PARDER          reduce using rule 20 (listArray -> listArray listAccessArray .)
    COMA            reduce using rule 20 (listArray -> listArray listAccessArray .)
    PYC             reduce using rule 20 (listArray -> listArray listAccessArray .)
    CORDER          reduce using rule 20 (listArray -> listArray listAccessArray .)
    CORIZQ          shift and go to state 43

  ! CORIZQ          [ reduce using rule 20 (listArray -> listArray listAccessArray .) ]


state 33

    (23) listAccessArray -> CORIZQ . expression CORDER
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 44
    listArray                      shift and go to state 21

state 34

    (4) instruccion -> VAR ID DOSPTS type IG expression . PYC
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    PYC             shift and go to state 45
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 35

    (15) expression -> PARIZQ expression PARDER .

    MAS             reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    PYC             reduce using rule 15 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 15 (expression -> PARIZQ expression PARDER .)


state 36

    (3) instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 3 (instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 3 (instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 3 (instruccion -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 37

    (9) expressionList -> expressionList COMA expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    PARDER          reduce using rule 9 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 9 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 38

    (11) expression -> expression MAS expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    MAS             reduce using rule 11 (expression -> expression MAS expression .)
    MENOS           reduce using rule 11 (expression -> expression MAS expression .)
    PARDER          reduce using rule 11 (expression -> expression MAS expression .)
    COMA            reduce using rule 11 (expression -> expression MAS expression .)
    PYC             reduce using rule 11 (expression -> expression MAS expression .)
    CORDER          reduce using rule 11 (expression -> expression MAS expression .)
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30

  ! POR             [ reduce using rule 11 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 11 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 27 ]
  ! MENOS           [ shift and go to state 28 ]


state 39

    (12) expression -> expression MENOS expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    MAS             reduce using rule 12 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 12 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 12 (expression -> expression MENOS expression .)
    COMA            reduce using rule 12 (expression -> expression MENOS expression .)
    PYC             reduce using rule 12 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 12 (expression -> expression MENOS expression .)
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30

  ! POR             [ reduce using rule 12 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 12 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 27 ]
  ! MENOS           [ shift and go to state 28 ]


state 40

    (13) expression -> expression POR expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    MAS             reduce using rule 13 (expression -> expression POR expression .)
    MENOS           reduce using rule 13 (expression -> expression POR expression .)
    POR             reduce using rule 13 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 13 (expression -> expression POR expression .)
    PARDER          reduce using rule 13 (expression -> expression POR expression .)
    COMA            reduce using rule 13 (expression -> expression POR expression .)
    PYC             reduce using rule 13 (expression -> expression POR expression .)
    CORDER          reduce using rule 13 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 27 ]
  ! MENOS           [ shift and go to state 28 ]
  ! POR             [ shift and go to state 29 ]
  ! DIVIDIDO        [ shift and go to state 30 ]


state 41

    (14) expression -> expression DIVIDIDO expression .
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    MAS             reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    PYC             reduce using rule 14 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 14 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 27 ]
  ! MENOS           [ shift and go to state 28 ]
  ! POR             [ shift and go to state 29 ]
  ! DIVIDIDO        [ shift and go to state 30 ]


state 42

    (19) listArray -> listArray PUNTO ID .

    PUNTO           reduce using rule 19 (listArray -> listArray PUNTO ID .)
    CORIZQ          reduce using rule 19 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 19 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 19 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 19 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 19 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 19 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 19 (listArray -> listArray PUNTO ID .)
    PYC             reduce using rule 19 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 19 (listArray -> listArray PUNTO ID .)


state 43

    (22) listAccessArray -> listAccessArray CORIZQ . expression CORDER
    (11) expression -> . expression MAS expression
    (12) expression -> . expression MENOS expression
    (13) expression -> . expression POR expression
    (14) expression -> . expression DIVIDIDO expression
    (15) expression -> . PARIZQ expression PARDER
    (16) expression -> . ENTERO
    (17) expression -> . CADENA
    (18) expression -> . listArray
    (19) listArray -> . listArray PUNTO ID
    (20) listArray -> . listArray listAccessArray
    (21) listArray -> . ID

    PARIZQ          shift and go to state 16
    ENTERO          shift and go to state 19
    CADENA          shift and go to state 20
    ID              shift and go to state 22

    expression                     shift and go to state 46
    listArray                      shift and go to state 21

state 44

    (23) listAccessArray -> CORIZQ expression . CORDER
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    CORDER          shift and go to state 47
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 45

    (4) instruccion -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 4 (instruccion -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 4 (instruccion -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 4 (instruccion -> VAR ID DOSPTS type IG expression PYC .)


state 46

    (22) listAccessArray -> listAccessArray CORIZQ expression . CORDER
    (11) expression -> expression . MAS expression
    (12) expression -> expression . MENOS expression
    (13) expression -> expression . POR expression
    (14) expression -> expression . DIVIDIDO expression

    CORDER          shift and go to state 48
    MAS             shift and go to state 27
    MENOS           shift and go to state 28
    POR             shift and go to state 29
    DIVIDIDO        shift and go to state 30


state 47

    (23) listAccessArray -> CORIZQ expression CORDER .

    CORIZQ          reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    PUNTO           reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    MAS             reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    MENOS           reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    POR             reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    PARDER          reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    COMA            reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    PYC             reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)
    CORDER          reduce using rule 23 (listAccessArray -> CORIZQ expression CORDER .)


state 48

    (22) listAccessArray -> listAccessArray CORIZQ expression CORDER .

    CORIZQ          reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    PUNTO           reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    MAS             reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    MENOS           reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    POR             reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    PARDER          reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    COMA            reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    PYC             reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)
    CORDER          reduce using rule 22 (listAccessArray -> listAccessArray CORIZQ expression CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CORIZQ in state 32 resolved as shift
